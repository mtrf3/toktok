package X;

import android.content.Context;
import android.webkit.WebView;
import com.ss.android.ugc.aweme.discover.ui.GetABTest;
import com.ss.android.ugc.aweme.fe.method.AppInfoMethod;
import com.ss.android.ugc.aweme.fe.method.BdturingMethod;
import com.ss.android.ugc.aweme.fe.method.BroadcastMethod;
import com.ss.android.ugc.aweme.fe.method.CloseMethod;
import com.ss.android.ugc.aweme.fe.method.ClosePopUpWebPageMethod;
import com.ss.android.ugc.aweme.fe.method.DarkModeMethod;
import com.ss.android.ugc.aweme.fe.method.DownloadFileMethod;
import com.ss.android.ugc.aweme.fe.method.EnterUserPostFeedsMethod;
import com.ss.android.ugc.aweme.fe.method.GetContainerIdMethod;
import com.ss.android.ugc.aweme.fe.method.GetNativeItemMethod;
import com.ss.android.ugc.aweme.fe.method.GetSettingsMethod;
import com.ss.android.ugc.aweme.fe.method.GetWebViewInfo;
import com.ss.android.ugc.aweme.fe.method.H5UploadFileMethod;
import com.ss.android.ugc.aweme.fe.method.HasFeedbackMethod;
import com.ss.android.ugc.aweme.fe.method.JsAppDownloadMethod;
import com.ss.android.ugc.aweme.fe.method.LaunchChatMethod;
import com.ss.android.ugc.aweme.fe.method.LoadFeedsFlowMethod;
import com.ss.android.ugc.aweme.fe.method.LoadFeedsMethod;
import com.ss.android.ugc.aweme.fe.method.LoadGeckoResourcesMethod;
import com.ss.android.ugc.aweme.fe.method.LoginMethod;
import com.ss.android.ugc.aweme.fe.method.NoticePermissionMethod;
import com.ss.android.ugc.aweme.fe.method.OnBackPressedMethod;
import com.ss.android.ugc.aweme.fe.method.OpenAdLandPageLinksMethod;
import com.ss.android.ugc.aweme.fe.method.OpenAwemeDetailMethod;
import com.ss.android.ugc.aweme.fe.method.OpenBrowserMethod;
import com.ss.android.ugc.aweme.fe.method.OpenCalendarMethod;
import com.ss.android.ugc.aweme.fe.method.OpenFeedsFlowMethod;
import com.ss.android.ugc.aweme.fe.method.OpenPDFMethod;
import com.ss.android.ugc.aweme.fe.method.OpenRechargePanel;
import com.ss.android.ugc.aweme.fe.method.OpenSchemaMethod;
import com.ss.android.ugc.aweme.fe.method.OpenShortVideoMethod;
import com.ss.android.ugc.aweme.fe.method.PushOperationMethod;
import com.ss.android.ugc.aweme.fe.method.RoutePopMethod;
import com.ss.android.ugc.aweme.fe.method.RoutePushMethod;
import com.ss.android.ugc.aweme.fe.method.SendAnalyticsEventMethod;
import com.ss.android.ugc.aweme.fe.method.SendLogMethod;
import com.ss.android.ugc.aweme.fe.method.SendLogV3Method;
import com.ss.android.ugc.aweme.fe.method.SetNativeItemMethod;
import com.ss.android.ugc.aweme.fe.method.ShareLiveEventMethod;
import com.ss.android.ugc.aweme.fe.method.ShareMethod;
import com.ss.android.ugc.aweme.fe.method.ShowToastMethod;
import com.ss.android.ugc.aweme.fe.method.UserInfoMethod;
import com.ss.android.ugc.aweme.fe.method.commerce.RefreshNavTitleMethod;
import com.ss.android.ugc.aweme.fe.method.incentive.AppsFlyerAttributionMethod;
import com.ss.android.ugc.aweme.fe.method.incentive.CheckCalendarExistMethod;
import com.ss.android.ugc.aweme.fe.method.incentive.CreateCalendarEventMethod;
import com.ss.android.ugc.aweme.fe.method.incentive.SpecActFollowMethod;
import com.ss.android.ugc.aweme.influencer.ECommerceLiveBridgeMethodServiceImpl;
import com.ss.android.ugc.aweme.live.jsb.LiveMethod;
import com.ss.android.ugc.aweme.share.ShareH5Service;
import com.ss.android.ugc.aweme.web.jsbridge.AdCommonJsMethod;
import com.ss.android.ugc.aweme.web.jsbridge.AdThirdTrackMethod;
import com.ss.android.ugc.aweme.web.jsbridge.EditPageMethod;
import com.ss.android.ugc.aweme.web.jsbridge.FeedbackUploadALog;
import com.ss.android.ugc.aweme.web.jsbridge.IsAppInstalledMethod;
import com.ss.android.ugc.aweme.web.jsbridge.MonitorLogMethod;
import com.ss.android.ugc.aweme.web.jsbridge.OpenAuthPageMethod;
import com.ss.android.ugc.aweme.web.jsbridge.OpenPhoneAreaMethod;
import com.ss.android.ugc.aweme.web.jsbridge.OpenThirdLoginVerifyMethod;
import com.ss.android.ugc.aweme.web.jsbridge.ShareOpenPlatformMethod;
import java.lang.ref.WeakReference;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import kotlin.jvm.internal.o;

/* renamed from: X.FrC, reason: case insensitive filesystem */
/* loaded from: classes7.dex */
public final class C40266FrC {
    public static final /* synthetic */ int LIZ = 0;

    public static final java.util.Map<String, InterfaceC38012Evw> LIZ(C38150EyA dmtJsBridge, Context context) {
        o.LJIIIZ(dmtJsBridge, "dmtJsBridge");
        o.LJIIIZ(context, "context");
        C38049EwX c38049EwX = dmtJsBridge.LJ;
        WeakReference<Context> weakReference = new WeakReference<>(context);
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        C40496Fuu c40496Fuu = new C40496Fuu(weakReference);
        c40496Fuu.LIZ(dmtJsBridge);
        Iterator it = C47261Igj.LJJIJIL("download_click").iterator();
        while (it.hasNext()) {
            linkedHashMap.put(it.next(), c40496Fuu);
        }
        linkedHashMap.put("sendThirdTrack", new AdThirdTrackMethod(c38049EwX));
        linkedHashMap.put("getWebViewInfo", new GetWebViewInfo(c38049EwX));
        OpenRechargePanel openRechargePanel = new OpenRechargePanel(c38049EwX);
        openRechargePanel.attach(weakReference);
        o.LJIIIIZZ(openRechargePanel, "OpenRechargePanel(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("openRechargePanel", openRechargePanel);
        linkedHashMap.put("openLightLandingPage", new C40289FrZ(c38049EwX));
        linkedHashMap.put("closeLightLandingPage", new C40289FrZ(c38049EwX));
        linkedHashMap.put("sendAdLog", new AdCommonJsMethod(dmtJsBridge, weakReference));
        return linkedHashMap;
    }

    public static final java.util.Map<String, InterfaceC38012Evw> LIZIZ(C38150EyA dmtJsBridge, Context context) {
        o.LJIIIZ(dmtJsBridge, "dmtJsBridge");
        o.LJIIIZ(context, "context");
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        for (Map.Entry<String, InterfaceC38012Evw> entry : ECommerceLiveBridgeMethodServiceImpl.LJ().LIZIZ(dmtJsBridge, new WeakReference<>(context)).entrySet()) {
            linkedHashMap.put(entry.getKey(), entry.getValue());
        }
        return linkedHashMap;
    }

    public static final java.util.Map<String, InterfaceC38012Evw> LJ(C38150EyA dmtJsBridge, Context context, F0E f0e) {
        o.LJIIIZ(dmtJsBridge, "dmtJsBridge");
        o.LJIIIZ(context, "context");
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        WeakReference<Context> weakReference = new WeakReference<>(context);
        C38049EwX c38049EwX = dmtJsBridge.LJ;
        o.LJI(c38049EwX);
        OpenAuthPageMethod openAuthPageMethod = new OpenAuthPageMethod(c38049EwX);
        openAuthPageMethod.attach(f0e);
        openAuthPageMethod.attach(weakReference);
        o.LJIIIIZZ(openAuthPageMethod, "OpenAuthPageMethod(dmtJs…tory).attach(mContextRef)");
        linkedHashMap.put("jumpOpenAuthPage", openAuthPageMethod);
        ShareOpenPlatformMethod shareOpenPlatformMethod = new ShareOpenPlatformMethod(dmtJsBridge.LJ);
        shareOpenPlatformMethod.attach(f0e);
        shareOpenPlatformMethod.attach(weakReference);
        o.LJIIIIZZ(shareOpenPlatformMethod, "ShareOpenPlatformMethod(…tory).attach(mContextRef)");
        linkedHashMap.put("shareOpenPlatform", shareOpenPlatformMethod);
        return linkedHashMap;
    }

    public static final java.util.Map<String, InterfaceC38012Evw> LIZJ(C38150EyA dmtJsBridge, Context context, InterfaceC40275FrL observer, F1G callback) {
        o.LJIIIZ(dmtJsBridge, "dmtJsBridge");
        o.LJIIIZ(context, "context");
        o.LJIIIZ(observer, "observer");
        o.LJIIIZ(callback, "callback");
        C38049EwX c38049EwX = dmtJsBridge.LJ;
        WeakReference<Context> weakReference = new WeakReference<>(context);
        JsAppDownloadMethod mJsAppDownloadMethod = new JsAppDownloadMethod(c38049EwX);
        mJsAppDownloadMethod.attach(weakReference);
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        linkedHashMap.put("isAppInstalled", new F71(weakReference));
        linkedHashMap.put("copyToClipboard", new C38274F0k());
        LoginMethod loginMethod = new LoginMethod(c38049EwX, false);
        loginMethod.attach(weakReference);
        o.LJIIIIZZ(loginMethod, "LoginMethod(iesJsBridge,…alse).attach(mContextRef)");
        linkedHashMap.put("login", loginMethod);
        LoginMethod loginMethod2 = new LoginMethod(c38049EwX, true);
        loginMethod2.attach(weakReference);
        o.LJIIIIZZ(loginMethod2, "LoginMethod(iesJsBridge, true).attach(mContextRef)");
        linkedHashMap.put("loginWithPlatform", loginMethod2);
        linkedHashMap.put("apiParam", new EZ7());
        linkedHashMap.put("openAweme", new C38292F1c(weakReference, c38049EwX));
        linkedHashMap.put("openRecord", new C38285F0v(weakReference));
        EnterUserPostFeedsMethod enterUserPostFeedsMethod = new EnterUserPostFeedsMethod(c38049EwX);
        enterUserPostFeedsMethod.attach(weakReference);
        o.LJIIIIZZ(enterUserPostFeedsMethod, "EnterUserPostFeedsMethod…idge).attach(mContextRef)");
        linkedHashMap.put("enterUserFeed", enterUserPostFeedsMethod);
        NoticePermissionMethod noticePermissionMethod = new NoticePermissionMethod(c38049EwX);
        noticePermissionMethod.attach(weakReference);
        o.LJIIIIZZ(noticePermissionMethod, "NoticePermissionMethod(i…idge).attach(mContextRef)");
        linkedHashMap.put("noticePermission", noticePermissionMethod);
        linkedHashMap.put("openSysDialog", new C77868UhE(weakReference, c38049EwX));
        linkedHashMap.put("uploadFile", new H5UploadFileMethod(weakReference, c38049EwX));
        o.LJIIIIZZ(mJsAppDownloadMethod, "mJsAppDownloadMethod");
        linkedHashMap.put("subscribe_app_ad", mJsAppDownloadMethod);
        linkedHashMap.put("unsubscribe_app_ad", mJsAppDownloadMethod);
        linkedHashMap.put("cancel_download_app_ad", mJsAppDownloadMethod);
        linkedHashMap.put("download_order", mJsAppDownloadMethod);
        linkedHashMap.put("ad_download_list", mJsAppDownloadMethod);
        linkedHashMap.put("get_download_pause_task", mJsAppDownloadMethod);
        linkedHashMap.put("get_downloading_task", mJsAppDownloadMethod);
        linkedHashMap.put("get_install_status", mJsAppDownloadMethod);
        linkedHashMap.put("accountLogout", new C40267FrD());
        LaunchChatMethod launchChatMethod = new LaunchChatMethod();
        launchChatMethod.attach(weakReference);
        o.LJIIIIZZ(launchChatMethod, "LaunchChatMethod().attach(mContextRef)");
        linkedHashMap.put("launchChat", launchChatMethod);
        OpenThirdLoginVerifyMethod openThirdLoginVerifyMethod = new OpenThirdLoginVerifyMethod(c38049EwX);
        openThirdLoginVerifyMethod.attach(weakReference);
        o.LJIIIIZZ(openThirdLoginVerifyMethod, "OpenThirdLoginVerifyMeth…idge).attach(mContextRef)");
        linkedHashMap.put("getThirdLoginToken", openThirdLoginVerifyMethod);
        linkedHashMap.put("scan", new C38962FQw(weakReference));
        BroadcastMethod broadcastMethod = new BroadcastMethod(c38049EwX);
        broadcastMethod.attach(weakReference);
        o.LJIIIIZZ(broadcastMethod, "BroadcastMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("broadcast", broadcastMethod);
        linkedHashMap.put("openLiveRoom", new LiveMethod(weakReference, c38049EwX));
        linkedHashMap.put("setNativeItem", new SetNativeItemMethod(c38049EwX));
        linkedHashMap.put("getNativeItem", new GetNativeItemMethod(c38049EwX));
        WebView webView = dmtJsBridge.LIZ;
        o.LJI(c38049EwX);
        linkedHashMap.put("getABTestParams", new GetABTest(webView, c38049EwX));
        linkedHashMap.put("getSettings", new GetSettingsMethod(c38049EwX));
        linkedHashMap.put("captureWebView", new R55(weakReference, c38049EwX));
        linkedHashMap.put("isAppInstall", new IsAppInstalledMethod(c38049EwX));
        linkedHashMap.put("appSetting", new C40259Fr5(c38049EwX));
        linkedHashMap.put("closeKrCopyright", new C40269FrF());
        linkedHashMap.put("uploadALog", new FeedbackUploadALog(c38049EwX));
        linkedHashMap.put("monitorLog", new MonitorLogMethod());
        linkedHashMap.put("fileSelection", new C86266XtO(weakReference, c38049EwX));
        OnBackPressedMethod onBackPressedMethod = new OnBackPressedMethod(c38049EwX);
        onBackPressedMethod.attach(weakReference);
        linkedHashMap.put("onBackPressed", onBackPressedMethod);
        OpenPhoneAreaMethod openPhoneAreaMethod = new OpenPhoneAreaMethod(c38049EwX);
        openPhoneAreaMethod.attach(weakReference);
        o.LJIIIIZZ(openPhoneAreaMethod, "OpenPhoneAreaMethod(iesJ…idge).attach(mContextRef)");
        linkedHashMap.put("choosePhoneArea", openPhoneAreaMethod);
        SpecActFollowMethod specActFollowMethod = new SpecActFollowMethod(c38049EwX);
        specActFollowMethod.attach(weakReference);
        o.LJIIIIZZ(specActFollowMethod, "SpecActFollowMethod(iesJ…idge).attach(mContextRef)");
        linkedHashMap.put("syncSpecActFollowStatus", specActFollowMethod);
        HasFeedbackMethod hasFeedbackMethod = new HasFeedbackMethod(c38049EwX);
        hasFeedbackMethod.attach(weakReference);
        o.LJIIIIZZ(hasFeedbackMethod, "HasFeedbackMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("hasFeedback", hasFeedbackMethod);
        AppsFlyerAttributionMethod appsFlyerAttributionMethod = new AppsFlyerAttributionMethod(c38049EwX);
        appsFlyerAttributionMethod.attach(weakReference);
        o.LJIIIIZZ(appsFlyerAttributionMethod, "AppsFlyerAttributionMeth…idge).attach(mContextRef)");
        linkedHashMap.put("appsflyer_attribution", appsFlyerAttributionMethod);
        CreateCalendarEventMethod createCalendarEventMethod = new CreateCalendarEventMethod(c38049EwX);
        createCalendarEventMethod.attach(weakReference);
        o.LJIIIIZZ(createCalendarEventMethod, "CreateCalendarEventMetho…idge).attach(mContextRef)");
        linkedHashMap.put("createCalendarEvent", createCalendarEventMethod);
        CheckCalendarExistMethod checkCalendarExistMethod = new CheckCalendarExistMethod(c38049EwX);
        checkCalendarExistMethod.attach(weakReference);
        o.LJIIIIZZ(checkCalendarExistMethod, "CheckCalendarExistMethod…idge).attach(mContextRef)");
        linkedHashMap.put("isCalendarEventExist", checkCalendarExistMethod);
        SendAnalyticsEventMethod sendAnalyticsEventMethod = new SendAnalyticsEventMethod(c38049EwX);
        sendAnalyticsEventMethod.attach(weakReference);
        o.LJIIIIZZ(sendAnalyticsEventMethod, "SendAnalyticsEventMethod…idge).attach(mContextRef)");
        linkedHashMap.put("sendAnalyticsEvent", sendAnalyticsEventMethod);
        EditPageMethod editPageMethod = new EditPageMethod(c38049EwX);
        editPageMethod.attach(weakReference);
        o.LJIIIIZZ(editPageMethod, "EditPageMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("openVideoEdit", editPageMethod);
        linkedHashMap.put("fetch", new F1N(c38049EwX, callback));
        RefreshNavTitleMethod refreshNavTitleMethod = new RefreshNavTitleMethod(observer);
        refreshNavTitleMethod.attach(weakReference);
        o.LJIIIIZZ(refreshNavTitleMethod, "RefreshNavTitleMethod(ob…rver).attach(mContextRef)");
        linkedHashMap.put("setTitle", refreshNavTitleMethod);
        return linkedHashMap;
    }

    public static final java.util.Map<String, InterfaceC38012Evw> LIZLLL(C38150EyA dmtJsBridge, F0E f0e, Context context, InterfaceC38277F0n adInfo) {
        o.LJIIIZ(dmtJsBridge, "dmtJsBridge");
        o.LJIIIZ(context, "context");
        o.LJIIIZ(adInfo, "adInfo");
        C38049EwX c38049EwX = dmtJsBridge.LJ;
        WeakReference<Context> weakReference = new WeakReference<>(context);
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        SendLogMethod sendLogMethod = new SendLogMethod(c38049EwX, adInfo);
        sendLogMethod.attach(weakReference);
        o.LJIIIIZZ(sendLogMethod, "SendLogMethod(iesJsBridg…Info).attach(mContextRef)");
        linkedHashMap.put("sendLog", sendLogMethod);
        CloseMethod closeMethod = new CloseMethod(c38049EwX);
        closeMethod.attach(weakReference);
        o.LJIIIIZZ(closeMethod, "CloseMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("close", closeMethod);
        UserInfoMethod userInfoMethod = new UserInfoMethod(c38049EwX);
        userInfoMethod.attach(weakReference);
        o.LJIIIIZZ(userInfoMethod, "UserInfoMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("userInfo", userInfoMethod);
        DarkModeMethod darkModeMethod = new DarkModeMethod(c38049EwX);
        darkModeMethod.attach(weakReference);
        o.LJIIIIZZ(darkModeMethod, "DarkModeMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("darkMode", darkModeMethod);
        SendLogV3Method sendLogV3Method = new SendLogV3Method(c38049EwX);
        sendLogV3Method.attach(weakReference);
        o.LJIIIIZZ(sendLogV3Method, "SendLogV3Method(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("sendLogV3", sendLogV3Method);
        OpenSchemaMethod openSchemaMethod = new OpenSchemaMethod(c38049EwX);
        openSchemaMethod.attach(weakReference);
        o.LJIIIIZZ(openSchemaMethod, "OpenSchemaMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("openSchema", openSchemaMethod);
        OpenPDFMethod openPDFMethod = new OpenPDFMethod(c38049EwX);
        openPDFMethod.attach(weakReference);
        o.LJIIIIZZ(openPDFMethod, "OpenPDFMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("x.openPDF", openPDFMethod);
        ShareH5Service.LIZ.getClass();
        C58149Mrx.LIZ().LJII();
        ShareMethod LJIJI = C58149Mrx.LIZ().LJIJI(c38049EwX);
        LJIJI.attach(weakReference);
        o.LJIIIIZZ(LJIJI, "Companion.get().getIESJs…idge).attach(mContextRef)");
        linkedHashMap.put("share", LJIJI);
        C58149Mrx.LIZ().LJIILLIIL();
        ShareLiveEventMethod LJIIZILJ = C58149Mrx.LIZ().LJIIZILJ(c38049EwX);
        LJIIZILJ.attach(weakReference);
        o.LJIIIIZZ(LJIIZILJ, "Companion.get().getJsBri…idge).attach(mContextRef)");
        linkedHashMap.put("shareLiveEvent", LJIIZILJ);
        C58149Mrx.LIZ().LJFF();
        PushOperationMethod LJJII = C58149Mrx.LIZ().LJJII(c38049EwX);
        LJJII.attach(weakReference);
        o.LJIIIIZZ(LJJII, "Companion.get().getIESJs…idge).attach(mContextRef)");
        linkedHashMap.put("pushOperation", LJJII);
        ShowToastMethod showToastMethod = new ShowToastMethod(c38049EwX);
        showToastMethod.attach(weakReference);
        o.LJIIIIZZ(showToastMethod, "ShowToastMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("showToast", showToastMethod);
        OpenBrowserMethod openBrowserMethod = new OpenBrowserMethod(c38049EwX);
        openBrowserMethod.attach(weakReference);
        o.LJIIIIZZ(openBrowserMethod, "OpenBrowserMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("openBrowser", openBrowserMethod);
        AppInfoMethod appInfoMethod = new AppInfoMethod(c38049EwX);
        appInfoMethod.attach(weakReference);
        o.LJIIIIZZ(appInfoMethod, "AppInfoMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("appInfo", appInfoMethod);
        RoutePushMethod routePushMethod = new RoutePushMethod(c38049EwX);
        routePushMethod.attach(f0e);
        o.LJIIIIZZ(routePushMethod, "RoutePushMethod(iesJsBri…).attach(providerFactory)");
        linkedHashMap.put("routePush", routePushMethod);
        OpenShortVideoMethod openShortVideoMethod = new OpenShortVideoMethod(c38049EwX);
        openShortVideoMethod.attach(weakReference);
        linkedHashMap.put("open_short_video", openShortVideoMethod);
        OpenFeedsFlowMethod openFeedsFlowMethod = new OpenFeedsFlowMethod(c38049EwX);
        openFeedsFlowMethod.attach(weakReference);
        linkedHashMap.put("openFeedsFlow", openFeedsFlowMethod);
        OpenAwemeDetailMethod openAwemeDetailMethod = new OpenAwemeDetailMethod(c38049EwX);
        openAwemeDetailMethod.attach(weakReference);
        linkedHashMap.put("openAwemeDetail", openAwemeDetailMethod);
        LoadFeedsMethod loadFeedsMethod = new LoadFeedsMethod(c38049EwX);
        loadFeedsMethod.attach(weakReference);
        linkedHashMap.put("loadFeeds", loadFeedsMethod);
        LoadFeedsFlowMethod loadFeedsFlowMethod = new LoadFeedsFlowMethod(c38049EwX);
        loadFeedsFlowMethod.attach(weakReference);
        linkedHashMap.put("loadFeedsFlow", loadFeedsFlowMethod);
        DownloadFileMethod downloadFileMethod = new DownloadFileMethod(c38049EwX);
        downloadFileMethod.attach(weakReference);
        linkedHashMap.put("downloadMedia", downloadFileMethod);
        RoutePopMethod routePopMethod = new RoutePopMethod(c38049EwX);
        routePopMethod.attach(f0e);
        o.LJIIIIZZ(routePopMethod, "RoutePopMethod(iesJsBrid…).attach(providerFactory)");
        linkedHashMap.put("routePop", routePopMethod);
        GetContainerIdMethod getContainerIdMethod = new GetContainerIdMethod(c38049EwX);
        getContainerIdMethod.attach(f0e);
        o.LJIIIIZZ(getContainerIdMethod, "GetContainerIdMethod(ies…).attach(providerFactory)");
        linkedHashMap.put("getContainerId", getContainerIdMethod);
        OpenAdLandPageLinksMethod openAdLandPageLinksMethod = new OpenAdLandPageLinksMethod(c38049EwX);
        openAdLandPageLinksMethod.attach(f0e);
        o.LJIIIIZZ(openAdLandPageLinksMethod, "OpenAdLandPageLinksMetho…).attach(providerFactory)");
        linkedHashMap.put("openAdLandPageLinks", openAdLandPageLinksMethod);
        ClosePopUpWebPageMethod closePopUpWebPageMethod = new ClosePopUpWebPageMethod(c38049EwX);
        closePopUpWebPageMethod.attach(f0e);
        o.LJIIIIZZ(closePopUpWebPageMethod, "ClosePopUpWebPageMethod(…).attach(providerFactory)");
        linkedHashMap.put("closePopUpWebPage", closePopUpWebPageMethod);
        LoadGeckoResourcesMethod loadGeckoResourcesMethod = new LoadGeckoResourcesMethod(c38049EwX);
        loadGeckoResourcesMethod.attach(f0e);
        o.LJIIIIZZ(loadGeckoResourcesMethod, "LoadGeckoResourcesMethod…).attach(providerFactory)");
        linkedHashMap.put("loadGeckoResources", loadGeckoResourcesMethod);
        OpenCalendarMethod openCalendarMethod = new OpenCalendarMethod(c38049EwX);
        openCalendarMethod.attach(weakReference);
        o.LJIIIIZZ(openCalendarMethod, "OpenCalendarMethod(iesJs…idge).attach(mContextRef)");
        linkedHashMap.put("calendarOperation", openCalendarMethod);
        BdturingMethod bdturingMethod = new BdturingMethod(c38049EwX);
        bdturingMethod.attach(weakReference);
        o.LJIIIIZZ(bdturingMethod, "BdturingMethod(iesJsBridge).attach(mContextRef)");
        linkedHashMap.put("popTuringVerifyView", bdturingMethod);
        return linkedHashMap;
    }

    public static final void LJFF(C60737Nsb c60737Nsb, C38150EyA dmtJsBridge, Context context, InterfaceC40311Frv interfaceC40311Frv, F14 f14) {
        o.LJIIIZ(dmtJsBridge, "dmtJsBridge");
        C31926Cfy c31926Cfy = new C31926Cfy();
        c31926Cfy.LIZJ(C38049EwX.class, dmtJsBridge.LJ);
        c31926Cfy.LIZJ(Context.class, context);
        c31926Cfy.LIZIZ(InterfaceC40311Frv.class, new C31924Cfw(interfaceC40311Frv));
        c31926Cfy.LIZIZ(InterfaceC37790EsM.class, new C31924Cfw(new F11(c60737Nsb)));
        if (c60737Nsb != null) {
            c60737Nsb.LJII(C31926Cfy.class, c31926Cfy);
        }
        C86290Xtm.LIZ();
        F2E.LIZ();
        C37854EtO.LIZ(c31926Cfy, f14, "DEFAULT");
        if (c60737Nsb != null) {
            C37854EtO.LIZ(c31926Cfy, f14, "Spark");
        }
    }
}
