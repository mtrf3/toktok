package X;

import Y.IDComparatorS30S0000000_2;
import android.app.Activity;
import android.app.FragmentManager;
import android.content.Context;
import android.graphics.BlendMode;
import android.graphics.PorterDuff;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.Lifecycle;
import androidx.lifecycle.LifecycleOwner;
import androidx.lifecycle.LifecycleRegistry;
import androidx.lifecycle.ViewModel;
import com.byted.cast.common.source.ServiceInfo;
import com.bytedance.als.AlsLogicContainer;
import com.bytedance.als.ApiCenter;
import com.bytedance.als.dsl.AlsVMContainer;
import com.bytedance.android.live.effect.api.IEffectService;
import com.bytedance.android.live.share.IShareService;
import com.bytedance.android.livesdk.livesetting.broadcast.LiveEnhanceRename;
import com.bytedance.android.livesdk.livesetting.broadcast.LiveToolsRename;
import com.bytedance.android.livesdk.livesetting.roomfunction.LiveToolbarMoreConfig;
import com.bytedance.android.livesdk.livesetting.roomfunction.ToolBarButtonWithTextExperiment;
import com.bytedance.android.livesdkapi.depend.model.live.LiveMode;
import com.bytedance.android.livesdkapi.depend.model.live.Room;
import com.bytedance.android.widget.Widget;
import com.bytedance.ies.sdk.datachannel.DataChannelGlobal;
import com.bytedance.keva.Keva;
import com.bytedance.mt.protector.impl.JSONObjectProtectorUtils;
import com.bytedance.mt.protector.impl.UriProtector;
import com.bytedance.poplayer.core.PopupManager;
import com.bytedance.vcloud.abrmodule.ABRConfig;
import com.ss.android.ugc.aweme.audiorecord.AudioRecorderParam;
import com.ss.android.ugc.aweme.base.model.UrlModel;
import com.ss.android.ugc.aweme.canvas.CanvasExtra;
import com.ss.android.ugc.aweme.canvas.CanvasFilterParam;
import com.ss.android.ugc.aweme.canvas.CanvasVideoData;
import com.ss.android.ugc.aweme.canvas.ForwardCanvasExtra;
import com.ss.android.ugc.aweme.canvas.ForwardVideo;
import com.ss.android.ugc.aweme.creative.CreativeInfo;
import com.ss.android.ugc.aweme.creative.model.AutoCutModel;
import com.ss.android.ugc.aweme.creative.model.AutoCutThemeData;
import com.ss.android.ugc.aweme.creative.model.CreativeModel;
import com.ss.android.ugc.aweme.creative.model.InlineCaptionExperimentInformation;
import com.ss.android.ugc.aweme.creative.model.SoundEffectInfoModel;
import com.ss.android.ugc.aweme.creative.model.edit.EditEffectModel;
import com.ss.android.ugc.aweme.creative.model.music.MusicBuzModel;
import com.ss.android.ugc.aweme.creative.model.stickers.StickerNewEngineModel;
import com.ss.android.ugc.aweme.draft.model.DraftDeleteResult;
import com.ss.android.ugc.aweme.draft.model.DraftRestoreResult;
import com.ss.android.ugc.aweme.draft.model.DraftSaveResult;
import com.ss.android.ugc.aweme.ecommerce.base.common.model.MediaItem;
import com.ss.android.ugc.aweme.ecommerce.base.pdp.repository.dto.DynamicSellingPointsBase;
import com.ss.android.ugc.aweme.ecommerce.base.pdp.repository.dto.ProductBase;
import com.ss.android.ugc.aweme.ecommerce.base.pdp.repository.dto.ProductPackStruct;
import com.ss.android.ugc.aweme.ecommerce.base.sku.model.dto.SaleProp;
import com.ss.android.ugc.aweme.ecommerce.base.sku.model.dto.SalePropValue;
import com.ss.android.ugc.aweme.ecommerce.base.sku.model.dto.SkcInfo;
import com.ss.android.ugc.aweme.ecommerce.service.vo.Image;
import com.ss.android.ugc.aweme.effect.EffectPointModel;
import com.ss.android.ugc.aweme.feed.model.Aweme;
import com.ss.android.ugc.aweme.feed.model.AwemeACLShare;
import com.ss.android.ugc.aweme.feed.model.BitRate;
import com.ss.android.ugc.aweme.feed.model.CardStruct;
import com.ss.android.ugc.aweme.feed.model.Video;
import com.ss.android.ugc.aweme.feed.model.VideoUrlModel;
import com.ss.android.ugc.aweme.im.service.model.IMUser;
import com.ss.android.ugc.aweme.internal.AVCommerceServiceImpl;
import com.ss.android.ugc.aweme.music.model.Music;
import com.ss.android.ugc.aweme.mvtheme.MvCreateVideoData;
import com.ss.android.ugc.aweme.now.NowPostInfo;
import com.ss.android.ugc.aweme.now.UserNowPost;
import com.ss.android.ugc.aweme.search.pages.result.common.feelgoodsurvey.core.model.FeelgoodHeaderConfig;
import com.ss.android.ugc.aweme.search.pages.result.common.feelgoodsurvey.core.model.FeelgoodPageConfig;
import com.ss.android.ugc.aweme.search.pages.result.common.feelgoodsurvey.core.model.FeelgoodShowConfig;
import com.ss.android.ugc.aweme.search.pages.result.common.feelgoodsurvey.core.model.FeelgoodSingleChoiceData;
import com.ss.android.ugc.aweme.search.pages.result.common.feelgoodsurvey.core.model.FeelgoodSurveyQuestion;
import com.ss.android.ugc.aweme.search.pages.result.common.feelgoodsurvey.core.model.FeelgoodSurveyQuestionnaire;
import com.ss.android.ugc.aweme.search.pages.result.common.feelgoodsurvey.core.model.RatingData;
import com.ss.android.ugc.aweme.services.editeffect.EditEffectAnchorManager;
import com.ss.android.ugc.aweme.services.editeffect.EffectAnchorServiceImpl;
import com.ss.android.ugc.aweme.shortvideo.AVChallenge;
import com.ss.android.ugc.aweme.shortvideo.ImportVideoInfo;
import com.ss.android.ugc.aweme.shortvideo.edit.VideoPublishEditModel;
import com.ss.android.ugc.aweme.shortvideo.edit.model.VideoFileInfo;
import com.ss.android.ugc.aweme.shortvideo.edit.multiedit.data.MultiEditVideoRecordData;
import com.ss.android.ugc.aweme.shortvideo.edit.multiedit.data.MultiEditVideoSegmentRecordData;
import com.ss.android.ugc.aweme.shortvideo.edit.multiedit.data.MultiEditVideoStatusRecordData;
import com.ss.android.ugc.aweme.shortvideo.model.CreativeDurationExtra;
import com.ss.android.ugc.aweme.shortvideo.model.MusicModel;
import com.ss.android.ugc.aweme.shortvideo.ui.TimeSpeedModelExtension;
import com.ss.android.ugc.aweme.sticker.StickerInfo;
import com.ss.android.ugc.aweme.sticker.data.InteractStickerStruct;
import com.ss.android.ugc.aweme.story.inbox.InsertStory;
import com.ss.android.ugc.effectmanager.effect.model.Effect;
import com.zhiliaoapp.musically.R;
import defpackage.b1;
import defpackage.e1;
import defpackage.q;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import kotlin.jvm.internal.o;
import org.json.JSONObject;
import ujb.s;

/* renamed from: X.HbQ, reason: case insensitive filesystem */
/* loaded from: classes8.dex */
public class C44384HbQ implements InterfaceC48038ItG, RTU, InterfaceC67677QhF, C68D, C4CJ {
    public static Context LJLIL;
    public static Boolean LJLILLLLZI;
    public static final char[] LJLJI = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
    public static final C44384HbQ LJLJJI = new C44384HbQ();
    public static final C44384HbQ LJLJJL = new C44384HbQ();
    public static final byte[] LJLJJLL = {-80, 9, 83, 102, -105, 4, 40, 15, -59, -122, 34, -48, -124, 7, 1, 50, 66, Byte.MIN_VALUE, 4, 45, 104, 73, 121, -4, -77, -109, -121, -110, -120, 110, 52, -34, -119, 42, -119, Byte.MIN_VALUE, -54, 46, 52, -68, -108, 25, -113, 53, 9, -113, -70, 1, 104, 1, Byte.MIN_VALUE, 3, -116, 76, 112, -106, 114, 97, 11, -50, 76, -104, 80, -48, 19, -116, -31, 33, 1, 59, -30, 34, -87, 11, -37, -63, -84, -125, 48, 70, -12, -102, -40, -64, 106, -83, -34, -67, 32, -62, -14, 107, -101, 33, 31, 12, 78, 113, 59, -120, -22, 35, 20, -56, 27, 14, 55, -69, -94, 0, 16, 67, -87, -47, 97, -72, 60, 75, -99, 12, -23, 125, -126, -62, -26, -111, 11, 53, 36, 96, 33, 8, 50, -21, -127, 12, -120, 52, 98, -62, -30, -64, 56, 85, -64, 58, 20, 37, 11, 4, -58, 46, 44, -45, 11, 64, -64, -47, 126, 4, -125, 74, 72, 104, -126, 80, 5, -114, -43, -26, 51, -60, -66, -26, -105, -21, -97, -34, -127, 40, -97, -72, 79, 66, -88, 98, 36, 119, 24, -39, 92, 28, -23, 89, -112, -22, -110, -88, -93, 100, 21, 23, 118, -96, 98, -12, 75, -52, 96, 12, -8, 34, -79, -19, 5, -118, 103, 41, 110, -102, 26, 109, 17, -9, 66, 89, -30, -41, -90, 24, 93, -74, -78, -109, -57, 7, 111, 69, 46, 36, 40, 4, 1, -48, 62, 15, 66, -103, -94, 1, 50, 0, 37, -44, 88, -76, 5, 50, Byte.MIN_VALUE, -90, 103, -37, 36, -108, 11, 101, -71, -17, -52, 82, 89, 69, 24, 56, -103, -59, 4, -3, 103, -29, 35, 79, Byte.MIN_VALUE, 15, 71, -49, -24, -31, 14, -64, -23, 64, 72, 4, -119, 42, 10, -62, 106, -91, 12, 0, 23, -75, -79, -112, 84, -84, 16, 52, -111, 68, 34, 2, 38, 48, -118, -36, -51, -120, 1, 36, 81, -54, -75, -127, 37, 8, 48, 119, -126, -25, 110, 86, 4, 96, 67, -43, 59, -122, 64, 98, Byte.MIN_VALUE, -102, 112, 125, 19, 72, -20, 10, 33, 0, 18, 1, 108, -20, 105, 50, 28, -48, 99, -88, 15, -10, 83, -73, 19, 1, -53, 69, -51, 15, -91, 50, -89, 122, 97, 79, 45, 96, 102, XC5.LJFF, -92, 84, -93, -58, -94, 10, -102, 4, -108, -110, -95, 84, 105, -34, 118, -63, 108, -78, 16, 82, -95, -38, -102, -29, 38, -32, 25, 105, 89, 99, 94, -54, -118, -118, -55, 22, 42, 111, -112, 100, 16, 5, -36, -63, 112, -124, -120, -93, 83, -96, 65, 92, -34, 71, 85, 66, 97, -30, 97, 32, 53, -18, 110, 60, 108, 12, -40, -113, 112, 23, -16, -41, -87, 48, -86, 68, 64, -60, -111, -122, 40, 40, 3, 100, 2, -47, -92, -75, 74, 64, 66, -42, 3, 106, 123, -94, 46, 111, 23, 10, -70, -126, 16, 80, 40, 49, 8, 112, 66, -100, 48, -119, 34, -94, -92, Byte.MIN_VALUE, 84, 42, 33, 20, 1, 8, 21, -92, -116, 37, 67, -119, 96, 33, 5, 44, 19, -121, 48, -107, 94, -53, -46, 41, 11, 17, -53, 0, -94, 17, 74, 20, -120, 8, -92, -56, 0, Byte.MIN_VALUE, 66, -112, 76, Byte.MIN_VALUE, 39, 1, 1, -64, -105, -54, 61, 11, 33, -120, 96, 78, 7, 25, 32, -37, -92, 2, 125, -30, 56, 26, 3, 66, 41, -15, 108, 51, -63, -4, -66, -119, -27, -106, -105, 7, 39, -102, 63, 34, 74, -78, 48, -89, 36, -64, -15, 64, 39, 86, -119, 29, -125, 20, 0, 0, 38, 33, 96, 41, -105, -53, -95, 10, -24, 50, -20, 2, 42, 68, 32, 25, -62, 83, -38, -100, 123, -20, 106, 23, 3, 0, 57, 32, 20, -26, 8, -98, -4, 3, 18, -103, -80, 62, 20, 40, 105, 27, -78, -80, 50, 95, 2, -120, 117, Byte.MIN_VALUE, -79, 79, 62, 89, -58, -82, Byte.MIN_VALUE, -89, -38, 64, 40, -109, -105, 53, -75, -111, -54, 79, -43, 8, 33, 20, 89, -126, -56, 41, 118, 63, -15, 89, -111, -19, 120, 7, -111, 113, -28, 20, 109, Byte.MIN_VALUE, 111, 37, -13, -83, -96, -77, -36, -70, 89, -31, -26, -100, 11, 112, 56, -115, -40, 94, 33, 32, -104, 0, 28, 64, 52, -88, -63, -30, -39, 7, 68, 6, 16, 2, -125, 12, -64, -83, 64, 23, 105, 41, -119, 24, -123, -120, 9, 42, -49, 68, Byte.MIN_VALUE, -66, 56, 12, -44, 64, 8, -56, -80, 18, -70, 56, 74, 74, -39, -53, Byte.MIN_VALUE, 53, 122, -103, 29, 21, 78, 80, 96, -104, 1, 6, -47, -16, 96, 49, 1, 14, 47, 73, 33, -82, 72, 8, -60, -48, 66, -89, 96, 122, -12, 119, 12, 39, XC5.LJFF, 80, -75, 20, 6, 41, -28, -116, 32, 16, -47, -126, -107, Byte.MIN_VALUE, -49, -95, 78, -117, 108, -54, -69, 12, -71, 123, -23, 67, 6, 23, 84, -30, -4, 20, -63, 7, 24, -14, -28, -112, 17, 34, 65, 17, 0, 99, 8, -64, 20, 2, -127, 37, -24, -96, 119, 104, 73, -126, 58, 42, -124, -31, -109, -1, -16, 51, -11, 40, 64, 29, 113, 80, -76, 69, -60, 27, 66, 33, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    public static final byte[] LJLJL = {-21, -7, -7, -50, 48, 85, 86, 114, -124, -125, -127, 21, 25, 79, -60, 114, 55, -125, -55, 0, 95, -79, 85, 102, -92, 15, 82, 92, 55, 39, 60, -73, 17, 56, 87, 11, 102, 107, 14, -111, 108, 0, 94, 27, 0, -93, 0, -127, -87, 24, -92, 111, 0, 107, -53, 66, 94, 84, 69, -120, -16, 3, -85, 49, 85, -10, 3, -121, 46, -122, 80, 73, 26, 111, 104, -127, -83, 14, -76, 95, 21, Byte.MAX_VALUE, -73, -3, -67, 100, -88, -127, 16, 108, 112, 63, 52, -76, 35, 33, 63, -57, 98, -67, 20, 63, 55, -127, 28, 96, 111, 121, 5, -60, -77, 51, -122, 23, -9, -124, -60, 49, -37, 126, -114, 106, -125, -39, 41, 106, -98, 36, 121, 30, -104, -4, -69, 25, 120, -3, 71, -85, -81, -104, 2, 14, -87, 80, -127, -4, 38, 83, -61, -24, 32, 65, 98, -123, 19, 19, -89, 111, -2, 41, 122, -125, -68, 114, 10, 110, 4, -76, 10, 126, 77, 64, 85, -115, -107, 82, 17, 86, -98, 47, 19, 99, 95, 90, -115, 59, 84, 69, 49, 89, 85, 109, 81, 34, -6, -125, 114, 55, -80, 111, 86, 82, -127, 119, 49, 62, -89, 96, 114, 111, 85, 114, 20, 114, 2, 80, 126, 80, -127, 48, 88, -75, -57, 104, -88, -124, 24, 37, -3, -85, -108, 112, 56, 64, 60, 97, 14, 126, 55, -85, 83, 68, 89, 102, 90, 41, -125, -109, 119, 22, 91, 98, 102, 7, 51, 41, 98, 74, -11, 80, -42, 40, -68, 17, -13, 58, -6, 119, 36, -125, 80, -40, 107, 95, 49, 89, -6, 82, -125, 95, -98, -122, 15, 63, -60, -93, -121, 118, -58, 2, -1, 87, 0, -24, 87, 52, -72, 104, 95, 90, -87, 104, -95, -89, -123, 63, -123, -15, 63, 102, -53, 124, 16, 83, 51, 59, 73, 2, -2, 80, -79, 126, 41, 95, 114, 0, -87, -120, -120, 2, -81, 119, 96, 36, -94, Byte.MIN_VALUE, 75, 84, 19, 19, -6, 118, -76, 52, 73, -66, 114, -11, 111, 98, -127, -119, 96, -53, 0, 52, -119, 0, -36, 20, 9, 104, 87, 111, -117, -85, -85, 106, -3, 107, -78, 70, 80, 113, -80, 4, 102, 83, -60, -93, -98, -93, -127, 59, 0, -89, -89, 69, 87, -123, 80, -98, 126, 123, -87, -127, -60, -89, 123, -73, -127, -46, -76, -125, 0, 0, -89, 5, 89, 104, -75, -62, 17, 121, 121, -76, -26, -72, -123, 89, -4, 41, 121, 95, 55, 90, 95, 95, -76, 121, 111, 114, -123, -117, 109, 10, 100, 126, 126, -98, 8, 85, 41, 39, 3, 66, -127, 3, 68, 39, 0, 63, -127, 35, 111, 93, -112, 119, 126, -61, 96, 54, 86, 31, 39, 104, -69, 88, 84, 77, -23, 38, -4, 81, 81, 19, 9, -15, 113, 113, -114, -6, 8, 106, -6, 24, 112, -115, 126, -4, -6, -122, 99, 114, -51, 79, 86, 86, 113, 100, 119, 90, 8, -122, 90, 38, 71, 10, 87, -40, 62, 3, 110, 124, -10, 38, 110, 115, 112, -117, -87, 90, 8, 124, 101, -15, 20, 87, -120, 66, 17, 19, 102, 8, 4, 35, 67, -80, 102, 58, 102, 107, -87, 37, 4, -52, 96, 48, 126, 126, -66, 90, 101, 76, -82, -120, 104, 87, -96, -123, -87, 104, -10, -127, 110, 35, 104, 79, -53, 2, -1, 107, 100, -123, -67, 0, -127, -126, -46, 49, -6, 92, -82, 3, 34, 109, -126, 73, 35, 7, 77, 112, 41, 96, 87, 37, -125, 90, 87, -127, 84, 90, -87, -92, 14, 41, 112, 110, -122, 58, 100, 68, 65, 73, 126, 83, -123, 50, 85, -117, -60, -6, -6, 111, -114, -95, -61, -3, 49, 85, -74, -87, 67, 66, 61, -97, 93, 112, 111, 9, 85, -15, 80, 75, 104, 112, 52, 5, -4, 19, -40, 1, 80, -84, 109, 78, 70, 77, 8, -113, 79, 24, 101, 107, 109, 32, 0, -95, -108, -127, 90, 68, -68, 95, -59, 111, -122, 39, 96, 125, 100, 15, 16, 80, 90, 112, -63, 80, 90, 18, 90, 110, 110, -65, 86, 107, 39, 39, 60, -120, -111, 64, 90, 112, -98, -61, -95, 72, 121, 3, 67, -87, 103, 114, -117, -48, -77, 46, 15, 107, -124, 74, -92, -20, 49, 85, 85, 85, 112, 82, -85, 51, 8, 15, 15, -127, 84, 94, 112, 0, 104, 14, 122, 60, 104, 72, -49, 115, 121, 85, -69, -55, 104, 81, 107, 63, 111, 25, 0, 0, -67, 0, 33, 39, 26, 38, 63, 5, -76, 80, -123, 60, 36, -13, 4, -15, 111, -125, -73, -77, 0, -122, 106, -124, 43, 81, -123, 78, -127, -127, -69, -69, 109, -83, -65, 85, 49, -87, -67, 89, 0, Byte.MAX_VALUE, -66, 88, -53, -112, 49, 3, 62, -123, -16, -16, -123, 4, 17, -83, -21, 107, 85, -127, -117, 125, 85, -91, -115, -115, 126, 106, 32, -123, 32, 10, 89, 84, 39, 98, 49, 0, 37, 59, -87, 90, 32, 104, -120, 56, 32, -6, -112, 88, 35, -73, 0, 107, 31, -87, 120, 96, -85, -120, 120, 90, -66, 90, -6, 15, -125, -61, 114, 17, Byte.MIN_VALUE, -113, -122, 18, 115, -57, 83, -89, -122, -95, -60, -87, 46, -87, 3, -36, -76, 72, 89, -120, -78, -87, -78, 87, 103, -15, 9, 102, -116, 107, 0, 85, 24, 4, 5, 72, 24, -67, 4, -122, -120, 124, 97, 125, -27, -18, -27, 91, -122, -53, 80, -57, -57, 39, 92, 100, -111, 112, 0, -80, 96, 41, 87, 69, -78, -122, 87, 99, 121, 80, 60, 39, 80, 60, -114, 118, 4, 104, 104, 21, 93, 111, 16, 30, 104, 32, 36, 90, 108, 86, 43, -122, -50, -122, 58, 14, -122, -122, 90, -6, 90, 8, -123, 12, 0, -121, -114, 112, -63, 31, 5, -37, 126, 8, -126, 75, -80, 57, 10, -19, 102, -105, 14, 34, 59, -117, 115, 97, 94, -125, 
    104, -23, 20, 63, 76, 90, 108, -123, -123, 8, -21, 104, -65, 0, -50, -104, 96, 32, 4, 11, 111, 85, 0, 20, 0, 90, 104, 38, -103, 12, -124, -126, 54, -53, -122, 80, 96, 17, -120, 107, 106, 23, -82, 0, 0, -116, 59, 0, -97, -107, -37, 41, -126, -97, 37, -87, -116, 37, -8, 96, 104, 111, 36, -79, 3, 7, -127, 104, 21, -116, 46, 30, 7, -87, -85, -85, -103, -125, 89, 59, 14, 108, 61, 112, -80, 38, 33, 40, 76, 16, -84, 33, -18, -18, 85, 112, -73, 109, 100, 72, 64, -123, -117, -6, -127, -123, 103, -107, 0, 64, 39, 90, 39, 90, 15, 67, -97, 73, 94, 94, 115, 112, 10, 10, 90, 111, 72, 100, 126, 11, 41, -72, 0, 0, 114, 57, 101, 56, 123, 15, 112, 17, -49, -119, 56, 8, 74, 38, 25, -37, 107, -122, -4, 123, -103, -85, -93, -87, -127, 39, -72, 104, 67, 90, 87, 80, 16, 26, -127, -3, 28, 10, 88, 0, -7, -125, -117, -125, -107, -127, 58, 115, 83, 20, 88, 91, 17, 10, -67, -93, 5, 76, 126, 26, 54, -32, 32, -85, 14, -121, 59, 41, 59, 14, -93, -7, 17, -123, 0, 41, 76, 39, 7, 90, 20, 36, -94, -78, 85, 87, -93, -127, 57, 0, 117, 39, -125, -21, 104, 0, 99, 85, 85, 102, 87, 59, 0, 0, 90, 6, 115, -127, -127, -125, 105, 15, 100, 107, -115, -14, -65, -60, -60, -57, 39, 49, 126, -73, -115, -53, 66, -85, 102, -123, -114, 85, 32, 80, 85, 65, 111, -93, 77, 72, 0, -20, -127, -55, -10, 101, 4, 126, -121, 105, 62, -125, -73, 4, -125, 80, -115, 4, -73, -93, 37, 63, 105, -125, 105, 100, 107, -60, 39, 32, -93, -115, -127, 85, 63, 65, 111, 101, -121, 4, -123, -118, -121, 51, -115, -123, 34, -127, 102, 58, -107, 63, 33, 122, 5, 96, -123, -122, 107, 100, 41, -122, 124, 3, 92, 52, -40, -127, -76, -123, -120, 14, 92, 121, 33, 100, -123, 97, 41, 85, 104, -87, -115, 85, 100, 85, 100, 100, 68, 90, 3, 3, -123, 119, -127, 83, 98, 66, 119, 30, 61, 95, -122, 104, 12, 98, 106, 32, -6, 75, -127, 98, 106, 77, 86, 99, 102, 50, 37, 106, 91, -115, 89, -45, 36, 110, -123, 93, 84, 91, 34, 35, 87, 22, -114, 95, 104, 104, 52, 38, 115, 37, 115, 95, -125, -120, -124, 101, -112, -112, 126, 102, 90, -125, 67, -80, 63, 101, -87, -46, -21, -121, 93, 39, -117, 5, 124, 75, 104, 4, Byte.MIN_VALUE, -10, 14, 93, 41, 6, 56, -109, 61, -120, 48, -127, 109, 95, 98, 104, 125, 115, 39, 30, -123, 39, 117, 30, 101, 107, 5, 126, -122, 122, 92, 88, 126, 37, 40, 69, -60, 126, -55, 77, 126, 100, 93, 103, 80, XC5.LJFF, 66, 38, -89, -120, -99, -102, 84, 111, 63, -127, -123, 12, 52, -92, 77, -99, 81, 39, 68, 58, 11, 32, 110, 118, -2, 0, 42, 3, 111, 89, 37, -122, 87, 84, 84, 95, 50, -7, 126, -120, 48, -125, 48, 72, 0, 33, 46, -122, -108, 4, 49, 89, 54, 79, 96, 85, 38, 57, 104, -50, 106, 66, -15, 47, 32, 36, -114, -127, -6, 59, 45, 80, -117, 1, -125, -124, 120, -110, -4, -113, -84, -125, -120, 114, -74, 37, 16, 123, -14, 111, 67, 95, -14, 39, 96, 39, Byte.MAX_VALUE, 122, 77, -122, 63, 90, 90, -7, 68, -125, -6, 111, -112, 43, 85, 126, 106, 3, 87, -48, 36, 87, -120, 101, 100, 118, 96, 96, -28, -6, -52, 103, 80, 0, 63, -110, 32, -125, 20, 0, 125, Byte.MIN_VALUE, 96, 107, -60, 89, -60, 85, -3, 36, -26, 49, 52, 9, 38, -4, 39, -124, 112, 90, 97, 61, 102, 102, 121, 111, 16, 49, 1, -87, -53, -53, 33, -127, -54, -125, 120, 124, -85, -77, 24, -24, 105, 85, -113, 5, 5, -121, -127, 104, 121, -124, -67, 34, 112, 122, 32, 95, 123, 27, 85, 35, 74, -124, -46, -93, 77, 107, -115, -127, -106, -123, 20, 126, -117, 84, -125, 124, 39, -2, 59, 122, -7, 38, 96, 119, 126, 59, 54, -4, -127, -123, -120, -85, -31, 104, 2, 126, -15, 126, 122, 104, 104, 32, 9, -31, -4, -115, 57, 121, -121, 114, -40, 107, -125, 111, -125, 126, 72, -127, 96, 117, -89, 37, 80, 32, -87, 104, 15, -127, 100, 77, 40, 80, 40, 102, 32, 9, 106, -93, 36, Byte.MIN_VALUE, -127, 124, 117, 104, 59, 126, 100, 72, 100, -127, 68, 90, 12, -127, -122, 119, 61, 9, 32, -6, 75, 98, 104, 98, -127, 12, -124, 126, -24, -117, 99, -45, 95, 77, -74, 93, 50, 87, 35, 84, -115, -124, 102, 115, -10, -109, 39, 93, 124, 52, -125, 63, -121, 48, 4, Byte.MIN_VALUE, 14, 104, 104, -99, -89, 39, 103, 39, -122, 126, 37, -120, 37, 122, 58, 101, 5, 107, 98, 104, -124, 92, 88, 30, Byte.MAX_VALUE, 95, -121, -122, 84, 111, -2, 84, 95, 110, 126, -99, 48, 50, 78, 1, -120, -110, -28, 72, -113, 85, -108, 80, 111, 36, 37, 66, 32, -84, -114, 54, 59, 37, 104, -52, 36, 67, 125, -125, 90, 97, 103, 80, 77, 111, 96, 32, -112, 3, 100, 63, -60, -14, 95, -53, 59, 52, 90, 102, 9, 39, -4, -60, -121, -67, -127, -125, -54, 59, -125, -2, -93, -7, -115, 100, -4, 126, 36, 102, -4, 119, 99, -115, 119, 112, 119, -6, 85, Byte.MIN_VALUE, -83, 112, 72, -78, 71, -124, -6, 38, 87, 62, 78, 14, 41, 87, 87, -123, -123, 100, 100, 39, 41, 126, 74, 104, 74, 104, -125, 6, 120, 77, 51, 88, 124, -125, -107, 92, 4, 90, 85, 18, 114, 111, -120, -126, 86, 85, 121, 81, 124, 18, 63, -111, 86, 104, -123, 10, 31, 112, -15, -50, -15, 101, 
    76, 110, 66, -53, 49, 94, 124, -97, 115, 115, -53, 3, -65, -87, -40, 14, 111, -126, 72, -65, -15, 85, 77, -117, -53, 41, 59, 124, 4, 11, -125, 112, 90, 23, 100, 62, 104, 113, 78, -11, Byte.MIN_VALUE, 83, 59, 105, 120, -123, 80, -120, 39, 14, -112, 80, 107, -14, 15, -68, 57, 38, -99, 85, 67, 104, 38, -65, 115, 14, -76, -81, 126, 92, -14, -112, -126, 95, 121, -123, 92, 118, -125, 107, 98, -125, 35, 18, 18, 3, 35, 43, 118, -121, -94, 117, 49, 36, 33, 65, -18, 99, 87, -68, -125, 54, 90, 58, 49, 49, -123, -127, Byte.MAX_VALUE, 72, -121, 93, 47, 114, 10, 116, -94, 87, 25, -127, 38, 2, -117, 90, 101, 23, 120, -83, 80, 7, 36, -117, -123, -115, 16, 114, 123, 59, 117, 100, 0, 32, 78, 107, -121, 93, 87, 118, 14, 72, 41, 100, 0, 96, -78, 93, 118, 11, -125, 90, 112, 100, 23, 120, 87, 7, Byte.MAX_VALUE, Byte.MIN_VALUE, -123, 83, 59, -11, 15, 101, -120, 105, 80, -125, 14, 39, 67, 107, -99, 57, -65, 85, 115, 104, 121, -123, -126, 126, -112, -81, -76, 118, -112, 92, -121, 3, -125, -94, 35, 90, 72, -127, 41, 33, 48, 14, -121, 99, -18, 58, -94, 87, -115, 90, -117, 23, 120, 100, 117, 114, 123, 32, 107, 93, 38, 85, 35, -48, 93, 85, 37, 115, 37, -127, 86, 60, -110, -110, -87, -118, 90, Byte.MIN_VALUE, 93, -6, 32, 2, 0, 87, 48, -115, 0, 38, 48, 36, 36, 67, -117, 34, 63, 27, 126, -120, 113, 4, -122, 38, 41, 103, 97, -112, 66, 76, -82, 93, 56, 51, 85, Byte.MIN_VALUE, 52, 106, -117, -125, 6, 60, 47, 53, -76, 4, 59, 3, -112, 64, 4, 38, 125, -2, -2, 102, 119, 113, 0, 117, 117, -109, -23, 10, -103, 115, 75, -115, 90, 36, -125, 84, -123, 57, 113, -23, -6, 113, -3, 75, 58, 104, -39, -80, -63, 6, 67, -103, 75, -126, 48, -19, -5, -120, -117, 67, -123, 90, -21, -117, 32, 20, -40, -117, -87, 98, 104, -127, 57, 87, -123, 76, 41, 5, -102, -118, 107, 2, -98, 88, 38, -76, XC5.LJFF, -123, -126, 66, 23, -125, 56, -2, 14, 87, 76, -127, -117, -127, 41, 71, 41, 92, -36, 89, 20, 97, 7, -52, 41, -84, 109, -123, 40, 89, 0, 57, -125, -6, 83, 80, 47, -122, -127, -36, -117, -117, -74, -76, -88, 123, -117, 38, 78, 5, 64, 20, -109, -1, -6, 51, -111, 23, -111, -21, -123, -124, 65, -123, 111, 76, 75, 46, 109, -122, 63, 124, 36, 42, -125, 103, 60, -117, 90, -109, 67, -14, 16, -28, 64, 30, 73, -125, 60, 55, 85, 57, -3, 126, 65, 64, -127, -36, -21, -79, 126, 14, 39, -76, -83, 51, 60, 57, 52, 85, -98, -127, -123, -3, 63, -67, -111, -85, XC5.LJFF, 119, -39, 17, 73, -117, 62, 29, 87, 83, 41, -122, 75, 20, 51, -109, -115, -115, -81, 57, -2, -2, -7, -83, 75, 52, -99, 119, 57, 14, 14, -120, -117, 41, -2, 75, 40, -127, 84, 113, -39, -81, -82, -123, -87, -123, 32, 41, 73, 80, -78, -81, 87, 80, -108, -93, 90, 9, 90, -36, 57, 4, -122, 52, -108, 85, -98, -115, -81, 37, 100, 58, 0, 4, 64, 76, 76, 100, -92, 0, -73, 2, -127, -117, 60, 0, 0, 100, 0, -110, 4, -77, -91, 76, -123, 0, 64, 60, 0, 111, 35, 99, 107, -114, 80, 113, 91, 63, 96, 83, 12, 32, -3, 41, 74, 36, 57, 77, -50, -6, -65, 18, 12, -4, -117, 119, 121, 4, 125, 63, -80, 57, 5, -125, 83, -99, 4, -16, 11, 102, 102, -19, -120, 15, 77, 6, -121, -123, 102, -108, 104, 1, 39, -10, 80, 2, -117, -123, 106, -76, -112, 5, -121, 116, -123, -117, -84, 111, 34, 110, 124, 114, -127, 78, 90, 1, -121, -40, -80, -127, 126, -84, -112, 126, 79, 47, 109, -111, 104, -16, -4, 108, -39, -10, 105, 11, -74, -22, -84, 18, 16, -127, 101, 87, 43, 50, 46, 96, 110, 119, 41, 90, -112, 90, 81, 12, 126, 111, 81, 61, 102, -125, 86, 112, -76, -118, 34, -117, 80, Byte.MAX_VALUE, 0, 35, -123, 126, -7, -91, 86, 83, -81, 96, 27, -111, 124, 104, -127, 74, 80, 111, 87, 119, -89, -18, -87, -87, -76, -81, 35, 99, 107, 96, 57, 12, -117, 77, -74, 18, 119, 102, -108, -76, -121, -123, 104, 121, -125, -87, 102, 1, 39, 116, -123, -123, -121, 5, -76, -123, -127, 90, -84, -39, 11, 126, 108, 79, -84, 47, -112, 50, 90, -127, 81, 41, -18, 112, 86, 126, -76, -127, -81, 91, 102, 48, 48, -15, -107, 15, -95, -95, 48, 97, 8, 15, 15, 15, 0, 15, 8, 48, 15, 15, 36, 17, -32, -32, -125, 47, 47, 0, XC5.LJFF, 15, 15, 0, 0, -83, 56, 32, 93, -4, 111, 111, -6, 98, 104, 109, -68, -6, 115, 79, 0, -114, 107, 64, 114, -121, 113, 99, 83, 84, 57, 77, 111, -126, 0, -121, 112, 80, -85, 38, 35, -40, 66, -123, 104, -119, -126, 36, 57, 80, 63, -9, 79, 67, 120, 61, 41, 75, 0, -120, 126, 69, 110, -60, XC5.LJFF, -127, -49, 104, -122, -115, -82, 98, 73, 50, 39, 61, -20, 120, -40, 75, -119, 96, 98, 21, 110, 89, 3, 70, -120, 3, 63, 63, 71, -120, 64, 71, 104, -127, 69, 106, 84, 39, 37, 52, 119, 7, 87, -85, 56, 126, -87, 0, -107, 12, 55, -115, XC5.LJFF, 124, 57, -76, 110, -121, -121, 111, 47, -98, 80, 64, 104, 56, 112, -73, 14, -28, 111, 59, 54, 75, 54, 100, 43, 38, 64, 111, 39, -125, 110, 114, 77, 15, 109, 77, 86, 125, 3, 60, 56, 80, 0, 104, 101, 102, 41, -79, 98, 57, 63, 38, 112, 52, 57, -4, 0, 102, 105, Byte.MAX_VALUE, 
    5, 39, 27, 52, 52, 119, -127, 75, -123, -77, 38, 55, -81, -106, 10, -4, 96, 111, 104, 84, -83, -117, 39, 14, 102, -68, 90, 54, 124, 126, 62, 80, -58, 15, 15, -95, -87, 112, 110, -73, -87, 104, 68, 62, -6, 109, 32, 112, 111, -66, 17, 2, 0, -99, 90, -110, 18, 84, 92, -44, 0, 37, 9, 112, 54, Byte.MIN_VALUE, 90, 9, 84, -117, 110, 112, 58, 3, 14, -15, 19, 34, 11, 76, 63, -110, 103, -81, -99, 107, -120, 39, -103, 111, 92, 115, -1, -123, -127, 98, 120, 92, -123, 85, 107, -28, -92, -126, -101, -124, -92, 114, 100, 37, 71, 85, -72, 90, 84, 90, 95, 114, -92, -126, 99, -114, 107, 20, 85, 11, -87, 114, 21, 89, -6, -15, 1, 109, 0, 59, -110, -10, -94, -40, 36, 110, 21, 88, 58, -117, 109, -2, 104, 71, 100, -63, 21, 11, 77, 111, -116, 111, 114, 120, -98, 88, 88, 51, 60, -55, 85, 17, 41, -112, -110, -117, 84, 88, 114, 114, 109, 14, -65, 34, 90, -83, 106, -117, 121, -2, 100, Byte.MAX_VALUE, 83, 84, 95, 62, 14, 91, 14, 29, 80, -124, -65, 32, -81, -9, 58, -61, 103, 26, -101, 87, -61, -110, -99, -85, 117, 32, 110, -6, 100, 32, 55, -80, 124, 85, 87, 117, -87, 110, 68, 3, -113, -18, -121, 104, 93, 111, -118, 100, -107, -65, 58, 95, 70, -125, 86, 0, 0, 114, 58, 65, -5, 75, -105, 112, 102, 52, 82, 40, 57, -55, -91, 47, 40, 110, 69, -123, 87, -124, 37, 106, 71, -123, -63, -103, 53, -89, -7, -107, 111, 100, 39, -38, 80, -76, -93, 100, 61, -18, 126, 46, 59, -107, 47, 51, -97, 64, 87, 72, 121, 95, 92, 59, 3, 46, 114, 82, -108, 51, -60, 5, 40, 55, 114, 109, 4, 124, 111, 60, -124, -13, -91, 111, -87, 119, -91, 104, -124, 21, -123, 85, 59, 82, -32, 104, -87, -117, 100, 104, -38, 17, 98, 40, 100, -80, -60, -60, -38, 91, -123, 39, -60, 100, 15, 23, 39, 110, 39, 39, -87, -122, 103, -84, -87, -121, -121, 91, 104, -83, 60, Byte.MIN_VALUE, 68, -87, 3, 115, 90, -125, -123, 6, -75, 90, -49, 66, 32, -2, -104, 43, -112, 83, 111, 122, 112, 100, -6, -66, -125, 63, 49, 85, 104, 31, 57, 71, 85, -27, -4, 0, -125, -15, 103, 106, 6, 84, 36, -125, 70, 113, 100, 90, 21, -50, 91, 77, -115, 75, 101, 106, -4, 8, -127, 12, 34, -33, 86, 114, 104, 0, -15, 109, 119, 106, -114, 39, 104, -122, -36, 92, 14, Byte.MIN_VALUE, 58, -110, 0, -76, 0, 0, 76, -112, -40, 71, 39, -56, 102, -108, -80, 19, 104, 102, 6, -15, 111, 49, -105, 21, 110, 65, -126, -125, 39, 39, 67, -117, 126, 57, 35, 96, Byte.MIN_VALUE, 10, 115, 14, 38, 41, 39, 20, -120, 38, 115, -9, 69, -4, 90, 125, -79, -4, 90, -87, 113, -15, 101, 8, 20, -122, 101, 41, -124, -51, -40, 85, 63, -126, -51, 59, 37, 104, 49, -99, -113, 11, -125, 69, 92, 119, -123, 38, 80, 96, 19, 39, -52, -126, 106, -114, -121, 39, 33, 69, -53, -89, -127, 111, 95, 12, 54, -123, 2, 32, 38, 87, 92, 5, -15, 104, -120, 120, -55, -102, 102, 87, 87, 94, -114, 30, -91, -127, 109, 17, -60, 104, 106, 106, 3, 69, 110, 27, -109, -4, -75, 0, 2, 66, 112, 19, 39, -106, 3, 89, -127, 94, 118, 64, 55, 103, 100, -122, 71, -72, -63, -92, 78, 91, 114, 11, 84, 52, 111, 32, 68, 20, 112, -126, 119, 52, 87, 32, 78, -123, 49, 96, 84, 84, 66, 100, -113, -71, 92, 0, 37, 112, 0, 103, 41, 123, -117, 87, 77, -66, -7, -87, 39, 19, 37, 95, -87, 62, 0, -120, 0, 71, -79, -107, -117, 33, 112, -125, 94, 66, 61, 33, -74, 109, -80, 11, -76, -87, 1, -18, -116, -56, -107, -16, 3, -15, 87, 99, -115, -89, 1, -105, 57, -97, 72, 80, 45, -112, -124, 12, -36, 49, 46, 59, 68, -6, -4, -113, -6, 111, -121, 105, -65, 33, 65, 85, -85, 61, 102, 55, 41, -125, -76, -61, -76, 122, 16, 91, -94, -107, -115, 0, -49, 78, 117, 0, 61, 87, 0, Byte.MIN_VALUE, -84, 0, -62, -112, 107, 63, -85, 109, 87, 72, 71, 80, 49, 90, 16, -127, 77, 16, 36, 64, 124, 119, 101, 73, 86, 111, -106, 92, 125, 80, 90, Byte.MIN_VALUE, 30, -1, 35, 119, -98, -28, -52, -2, -2, 120, -125, Byte.MIN_VALUE, 124, 103, -56, -125, 73, -125, 49, -98, 121, 96, 118, -122, -125, 15, -122, -112, 94, 103, -63, -22, 2, -122, 0, -63, 30, 57, 9, 86, -85, 56, 85, -79, -109, 103, -31, 82, 15, 60, 56, -3, 96, 48, 45, 20, -21, 57, 14, 25, 94, -112, 84, 107, 125, 66, -79, -112, 55, 30, 51, 78, 114, -125, -125, -73, 104, 112, 60, -36, 85, -126, 96, -69, -116, 15, 0, 56, 0, 0, 0, -50, -76, 56, -104, -109, 72, 94, 105, 96, -85, 40, 5, -67, -53, -73, 14, 80, -79, 63, -2, Byte.MIN_VALUE, 106, -76, 5, -106, -3, 53, -6, 33, 60, -67, 109, 32, 87, -120, 16, 41, -77, 94, 49, -78, 117, -125, 26, -87, 86, 85, -110, 0, XC5.LJFF, 0, 0, -124, -76, 122, -127, -7, 126, -3, -9, -81, 56, 94, 24, 37, -98, 24, -79, -46, 125, -12, 54, 83, -2, 43, 101, 60, 88, -115, -123, -106, -83, -122, -91, 74, 59, 117, -127, -125, -122, 62, -77, 107, 74, -115, -31, 64, -7, 67, 0, 0, 68, 32, -112, -125, 85, 54, -76, -116, 126, 111, -85, -113, -2, -4, -113, -89, 14, 67, 124, 103, 76, 109, 59, -117, 86, 56, 11, 104, 2, 59, 98, 66, -120, 118, -115, -127, -36, 57, Byte.MIN_VALUE, 1, 18, 107, -98, -34, 
    95, -125, -125, -3, 30, -123, -57, -87, -89, -127, -108, -99, 33, -16, -95, 72, 48, 47, -72, 16, 10, -76, 0, 0, -78, 77, -76, 91, -125, -93, 20, -125, 102, 32, 88, -125, 85, 105, 25, -36, -89, 52, 4, -21, -73, -108, -75, 119, -36, -115, 60, 41, -93, -121, 91, 104, -125, 68, Byte.MIN_VALUE, -9, -83, 71, -4, 43, 32, 22, 83, 66, -62, -27, 101, 31, 92, 92, 21, 58, -117, 75, 34, -122, -50, 11, 94, 8, -4, 102, 0, -114, 84, 101, -110, 84, Byte.MIN_VALUE, 70, -33, 6, 111, -4, -124, -4, 102, 20, -108, -9, 21, 20, 113, -108, -51, 59, -126, 65, 110, 67, 20, -80, 48, -4, -65, 10, 39, 96, 75, 14, -40, -15, 76, 92, -109, -91, 80, -66, 99, 110, 37, -126, 103, -46, -123, 59, 69, -72, 66, 106, -112, 124, -120, 87, 68, 69, 87, 122, 5, 30, 110, 102, 96, -55, -124, 27, -123, 104, 32, 39, 60, 3, 106, 17, -120, -91, -7, 84, -94, 62, -85, -106, 89, 56, -87, 123, 41, 109, 95, 77, 94, 55, -71, 87, 91, -79, -112, -125, 19, 64, -92, 0, -117, 1, 1, -127, -28, 55, -65, 12, -6, 61, -108, -97, 33, 85, 102, -73, 45, -115, -121, -123, 87, -116, Byte.MIN_VALUE, -18, 59, 68, -125, -117, -61, -112, -1, 107, -112, -3, 49, 77, 30, -2, -122, 73, 51, 125, 124, 2, 72, -63, -77, -112, 85, -63, -53, -125, 20, 96, -36, 60, -116, -36, -50, -79, 114, 9, 104, -126, 18, 15, 16, 60, -67, -73, XC5.LJFF, 109, -120, 63, -109, 96, -79, 32, -115, -83, -7, -76, 75, -93, -7, 52, -3, 62, Byte.MIN_VALUE, -89, 124, -113, -85, 104, 30, 16, -95, 32, 88, 33, 33, -118, 5, 67, 4, -83, -60, Byte.MAX_VALUE, -62, -69, 44, 32, Byte.MIN_VALUE, -62, 100, 14, 112, 14, 0, -112, -110, XC5.LJFF, 119, 20, 24, 87, 87, -125, -56, 86, -56, 71, 124, -46, 0, -16, -108, -80, 15, 14, 20, 115, 105, 96, 115, 82, 41, 119, 107, -56, 0, -97, -92, -72, 68, 30, 100, 113, 113, 32, 4, -81, 33, 31, -97, 100, -56, 100, 77, Byte.MAX_VALUE, 111, 81, 88, 0, 88, 4, 102, 81, 8, 3, 80, 106, -96, 6, -93, 72, 0, 0, 65, -36, 56, -112, 115, 6, 44, 105, 71, -6, -98, 60, 105, -13, -111, 85, 126, 32, -15, 59, 124, 57, 81, 0, -62, 44, 32, 100, 112, 14, 81, 44, 20, 80, 87, 119, -125, -56, -110, -62, 124, -46, 107, 81, 57, -56, -72, -112, 82, 96, 115, -97, -118, 113, -92, 72, 111, 100, 33, 85, 81, Byte.MAX_VALUE, 100, 100, 32, -93, 4, 126, -96, 6, 115, 65, 56, 6, -111, 124, 90, 90, -90, 74, 91, -4, 84, 104, 75, 106, 101, 71, 77, 38, 8, -18, -106, 114, 18, -123, -15, -120, 84, 101, 106, -125, -122, 37, 77, 4, 63, -109, -105, 65, -80, 1, 75, 75, -9, 19, 90, -127, -76, -78, 36, 92, 76, -77, -53, -124, 41, 76, 87, 80, 107, 84, 92, 32, -114, -2, 92, 46, 90, 14, 32, 32, 38, -123, -7, 71, 112, -125, 41, 87, -123, -36, 114, 87, -18, -18, -110, 104, 74, -74, 106, -117, 45, 36, -15, -80, 61, 87, -76, 0, 87, 106, -120, 101, XC5.LJFF, 32, 39, 100, 106, 111, 64, 111, -78, 80, 80, -36, 74, 54, 3, 125, -122, 54, 106, 92, 100, 126, 96, 114, 84, 80, 2, 85, 60, -127, Byte.MAX_VALUE, 60, 5, 85, 106, 22, 10, -81, 73, 62, -15, 54, 54, 111, 87, 86, -40, 80, -127, 60, 85, 106, -123, 126, -78, 85, -87, -87, -87, -115, 115, -123, 55, -116, -48, 104, 6, 100, 0, 99, 93, 99, -127, 102, 124, -123, 101, -114, 48, 109, -117, 41, 121, 115, -73, 111, 40, 66, 54, 112, Byte.MIN_VALUE, 45, 105, 41, 115, 109, -127, 54, 40, -79, -87, -48, 97, 115, -127, -127, 111, 111, 97, -50, 89, 27, -51, 81, 86, -20, 114, -87, -87, 101, -80, -89, 3, 10, -61, 65, 59, 113, 84, Byte.MIN_VALUE, 95, -127, -51, 36, 89, 124, 68, -125, -18, -63, -80, -6, 40, Byte.MIN_VALUE, 30, 85, 82, 126, 107, -40, 40, 74, -81, 0, 70, 107, 84, -80, 45, -80, 86, 119, 106, -68, -53, 114, -79, -61, 18, 84, 80, -96, 106, 85, 104, 2, 58, 62, 87, 111, -76, -78, 57, -127, -20, 101, 6, -15, 80, 0, 85, -127, -68, -61, -61, -89, -87, Byte.MIN_VALUE, 2, 85, 57, -78, -80, 2, 87, -87, 10, 0, 115, 115, 19, 1, 1, -120, -6, -125, -120, 37, 1, -120, -120, 65, -120, 65, 85, 85, -109, -60, -59, -59, -19, 103, 65, 126, 103, 96, 68, 12, -125, 12, 63, 72, 84, 12, 0, -121, 97, -33, 6, 106, 22, 12, -53, -109, 56, 8, 104, 102, 61, 11, -126, 119, -19, 101, -53, 106, -126, 61, -127, 90, 3, 3, 117, 100, 100, 56, -2, 68, -67, 107, 54, 66, -2, 96, -105, XC5.LJFF, 57, Byte.MAX_VALUE, 19, -96, -117, -95, 90, 16, 9, 104, 3, 3, 115, 89, -51, -117, -125, 15, 63, -125, 0, 61, 101, 57, 11, 90, -21, 96, 14, -96, 60, -77, 107, -2, 97, -127, -125, -124, 32, 56, Byte.MIN_VALUE, 87, -4, 72, 76, -125, -93, 80, 12, 90, -63, -116, 96, 80, -2, 112, 33, 0, 16, 98, 35, 80, 96, 11, 61, 101, 114, 95, 14, 80, 126, 41, 76, 72, 80, 12, 90, 112, 80, 114, 61, -118, -118, 87, 90, 87, -127, 106, 115, 114, 34, -73, -16, 125, 107, 114, -16, 106, 106, 88, 121, 103, 68, 1, -21, 88, 47, 112, 95, 104, 95, 102, 50, -98, -6, 113, 111, 78, 8, 75, 63, 58, -21, -9, -80, 37, -120, -89, 115, -2, 77, 77, 80, -122, 103, 37, 104, 104, -108, 74, -14, -10, -89, 90, -126, 70, 126, -98, -126, -90, 68, 37, 107, -114, 121, 112, 
    -120, 73, 73, -11, -94, 73, -112, -112, 45, 68, -94, 100, 112, -4, -108, 53, -119, 0, 104, 23, 64, 77, 77, 100, Byte.MAX_VALUE, -111, 109, -117, 100, 87, 91, 104, 112, 25, 65, 65, -124, -103, -89, -83, -13, 104, -67, -6, 102, 114, -2, 102, 98, -4, 126, 126, 17, 119, 18, 87, -11, -76, -93, -36, 5, 103, 68, 1, 112, 88, 47, 95, 95, 78, 102, 75, -6, 8, 50, 113, 111, -76, -80, -9, -120, -122, -126, 68, 115, 107, -119, -108, 104, -11, 126, 73, 112, 107, 107, -108, 64, 109, 77, -117, 100, 77, -36, -67, 65, 25, 114, -89, 126, 17, -11, 5, 87, 16, 0, 90, 86, 126, 16, 22, 82, 58, -82, 103, 96, 34, -117, 16, 49, 80, 101, 102, 51, -112, 26, 83, -79, 85, -83, -13, -13, -79, 16, 16, 16, -83, 0, 27, 87, 16, 87, 101, 126, 16, 22, -117, 49, 51, 102, -79, -13, 16, 16, 85, 83, 85, 85, 39, 39, 24, -127, 68, 49, 75, -125, 55, 88, 74, 12, 111, -116, 38, 106, 83, 83, 55, 106, -120, 104, 125, 14, -122, 61, -79, 48, 67, 49, 10, 39, 76, 111, 12, 65, -123, -126, 19, 102, 69, 48, 88, 101, 101, 80, 100, -90, 104, 24, 20, -44, 77, 21, -114, 71, 52, 111, 39, 102, Byte.MAX_VALUE, 109, 39, -125, -115, 19, 87, 21, 103, 59, 85, Byte.MAX_VALUE, 80, 105, 77, -29, Byte.MAX_VALUE, 121, 125, 67, 126, -125, 120, 115, 92, 86, 80, 102, 30, 50, 60, 20, 95, 85, -98, -79, 51, 61, 103, 114, -53, 60, -67, 14, 111, 94, -121, 24, -98, -117, 32, 38, 58, 104, -127, 10, 37, 109, 61, 126, 88, 126, 86, 111, -61, 100, -53, 32, 88, -73, -108, -47, 39, 68, -127, 75, 92, 74, 85, 12, 111, 38, 83, 106, -125, 39, 10, 49, 76, 104, 80, 10, 88, 115, -90, -123, 85, 19, 20, 71, 77, 111, -44, -114, 109, Byte.MAX_VALUE, 87, 105, 30, -98, 102, 51, 32, 103, -53, 20, -79, 94, -121, -67, 24, -117, -47, 40, -98, 109, 88, 86, 6, -40, 14, 20, 71, 112, 85, -125, 100, 2, 90, 87, 81, 91, 86, 18, 92, -69, 111, 87, 112, 63, 75, 75, 38, 98, -120, -123, -18, 91, 14, 22, 106, 81, -123, 58, -72, 110, 20, 10, -101, 75, 104, 4, 81, 4, -119, 20, Byte.MIN_VALUE, 112, -16, -121, -117, -120, -30, -117, -15, 118, -126, -80, -125, 58, 90, 101, 39, 14, 75, 75, 49, -79, -69, -14, 61, -123, 15, 63, 70, 98, 5, 37, -119, 80, 111, 20, 0, 106, -73, 0, 58, 90, -79, -117, 50, 0, -66, -84, 112, 71, 96, 73, -114, 77, 37, 92, 2, -76, -115, -121, 35, -14, -97, 61, -94, -111, -108, -6, -6, 100, 85, 26, 100, -122, 102, 84, -14, 49, -14, -4, 85, 125, -125, Byte.MIN_VALUE, 111, 64, 5, 86, -111, -98, 16, 49, 103, 75, -98, 51, -4, 37, -123, -79, -20, 63, 85, 26, 72, 100, 112, -110, 26, 32, -87, -123, 45, -76, 85, -73, Byte.MAX_VALUE, -53, 5, 24, -13, 49, 4, 14, -123, 111, 95, 122, 20, 52, 89, -81, 126, 75, -79, 75, 123, 59, -123, 67, 100, -73, 126, -120, 104, 103, 75, 18, -110, 100, -16, -72, 63, 88, -127, 45, -117, 85, 124, -87, 16, -69, 111, 75, 98, 38, 4, 14, 20, -72, 118, 39, 49, 90, -117, -110, -120, 75, -30, -126, 104, 58, 89, -69, 106, -123, 122, -73, 111, -14, 16, -87, 37, 100, 92, 0, -114, -6, -6, -108, -115, -111, 52, 24, -14, -123, -98, 26, 84, 5, -79, -4, 32, -13, -73, 49, 126, -121, -127, 45, 88, 102, 80, 80, 80, 111, 93, 104, 4, 70, -122, 20, 14, 48, 64, 63, -103, 111, -2, 120, -102, 96, 73, 99, -14, 14, -108, -5, 111, 54, -77, 20, 89, 9, 20, 55, -100, 18, -53, -83, -77, -46, 72, 118, 54, 64, 18, -100, -76, 95, 95, -2, -109, -2, -91, 119, 16, -97, -97, 64, 84, 94, 8, -65, 58, -97, 18, 82, 66, -15, -112, 82, 8, 64, -19, -15, -65, 90, 80, 15, 4, 0, 94, 103, -127, -16, -119, 34, 30, 64, -87, 18, -111, 64, -16, 50, -124, 5, -111, 47, -125, 76, 121, -95, -118, -6, -85, -125, 18, -16, -53, 24, -67, -67, 29, 95, -82, -4, -4, -32, 124, -101, -34, 18, -82, 9, 71, 71, -46, 119, 85, 71, -111, 71, 71, -118, 33, 111, 111, -87, -116, 90, -4, 107, -111, -79, 107, 33, 111, 107, -63, -127, -6, -122, -98, Byte.MAX_VALUE, 6, -9, -63, 95, 100, 89, -84, 111, 73, -6, 79, -84, 80, -125, 38, -13, 14, -53, -127, 95, 40, 100, 126, 111, 60, 12, -127, 6, 119, 75, 66, -127, 111, 77, 6, 30, 113, 74, -53, 92, 37, 83, 112, -15, -76, 81, 121, -76, 115, 84, 86, -50, 110, 0, 0, 115, 86, 4, 112, -15, -80, 75, 6, 3, -10, 90, 14, -127, 80, -117, 66, 6, 110, 108, -15, -39, 92, 58, 10, 90, 124, -117, 102, 0, 0, 0, 57, -122, 42, 120, 88, 80, 3, 80, 66, -120, 106, -82, -73, 69, 104, -6, 19, 80, -123, -7, 107, 87, 96, 126, 0, 0, -109, 0, 76, -114, 64, -59, 34, 115, 56, 0, 111, -44, -127, 108, 99, 0, 84, 3, 68, 90, 124, 40, -87, 30, 30, 95, -61, 0, 0, 0, 0, 109, -40, -112, -6, 1, 88, -44, 46, -127, 66, -1, 102, -121, 70, -94, 85, -40, 104, -97, -76, -118, 33, -120, -74, -80, -110, -87, -61, -111, -123, -39, 0, 0, 0, 39, 26, Byte.MAX_VALUE, 64, 120, 92, -117, -95, -111, -127, 15, 15, 124, 5, -127, 80, 80, 111, 46, 16, 67, 125, -85, 100, 3, 3, -125, 14, 77, 101, 90, 23, -125, 110, 75, 121, 0, 21, 0, 81, -125, 114, 84, -20, 
    26, -79, -69, 39, 39, 105, -112, 63, 57, 102, 96, 15, -4, -6, 81, 21, 0, -85, 5, -90, 126, -56, -127, 66, 4, -125, 26, -67, 85, 3, 16, -127, -127, -120, -124, 3, -117, 109, Byte.MAX_VALUE, -110, 97, 17, -115, 4, 88, 20, -123, 98, 52, 125, -106, 32, 32, 83, 107, -81, 98, -58, 85, 0, 88, 86, 105, 120, -101, 121, 26, 126, 93, 107, 38, -87, 33, 0, 0, 2, 17, -127, 95, Byte.MIN_VALUE, 0, -87, -82, -87, -57, -125, 88, 77, -76, 105, -87, 87, 111, 60, -127, 110, 74, -76, 84, 6, -108, 6, -10, -39, -76, 110, 124, 90, 6, 10, 120, -15, 58, 107, -122, -109, 80, 80, 69, 121, 120, -101, -127, -123, 87, 124, 88, 98, 99, -87, -85, -125, -87, 39, 66, 108, 30, 124, -114, -127, 109, 1, -80, -6, -110, 85, -97, 33, 102, -40, -39, 66, -120, 37, 39, -112, 86, 67, 14, 33, 64, 81, 80, 23, 77, 3, 90, 125, 5, -124, 15, 26, 5, -6, 57, 105, 102, -20, -125, -90, 16, 97, 17, -67, -56, 109, 80, 85, 107, 32, -81, -106, 121, 93, -87, 32, 105, -37, 104, 90, -87, -118, 21, 100, 90, 66, -127, 87, 0, 93, 39, 87, -55, 10, 112, -123, 121, -4, 90, 86, 81, -125, 39, 111, 89, 105, -117, -115, -15, 124, -125, 10, 100, 99, -124, 84, 87, 81, -24, 62, -126, -30, -80, -57, 90, 75, 81, -87, 15, -123, 96, 112, -112, 4, 89, 38, 58, -117, 110, 102, -122, 111, 101, 15, 99, -123, 111, 0, 107, -115, 84, 80, 103, 2, -123, 100, 118, -123, -127, -82, -120, 12, 64, 119, -73, 17, -52, 96, 12, -123, 94, -121, 38, -73, 0, 0, 0, -75, -126, -127, 111, 124, 75, 21, 84, -116, 111, 20, 98, 98, 14, 85, -114, -117, 71, -120, 64, 77, 77, -99, 121, 84, 37, -95, 0, 0, -76, 19, 41, 90, 3, Byte.MIN_VALUE, -16, 0, -4, 11, 66, -76, 6, -125, -117, 71, 99, 112, -6, -87, 103, -115, -105, 76, -97, 38, -6, -120, -40, 77, -120, -112, -94, 70, -6, 46, 99, -117, 4, 0, 0, -127, 41, 0, 38, -58, 16, 90, 3, 64, 121, 64, 77, -122, -65, 90, 46, 71, 100, 115, 112, -14, 114, -63, 121, 107, 75, -51, -117, 0, 25, 84, 96, 107, 112, 96, 82, 39, 115, 41, 60, 86, 21, -79, -127, 102, -125, -114, 112, -112, 48, 104, 102, 100, -127, -87, 65, -104, 64, 64, -40, 71, -69, -123, -79, -125, 36, -87, -117, -127, 5, 102, 104, -24, 38, -123, -83, 15, -77, 14, 45, -113, 111, 84, -115, 106, 59, 49, -123, 104, 122, 14, 107, 52, 125, 83, -123, -83, 100, -109, -118, 87, 87, 71, -68, -106, 111, 107, -76, 72, 87, 97, 104, -15, 41, -73, -6, 104, -127, -127, 111, 126, 103, 101, -15, -34, 121, -60, 107, -61, 63, 113, 111, -89, 20, -76, 115, -78, 45, 113, 107, 105, 4, -87, -75, -37, -118, -127, 112, -55, 39, -24, 99, 25, 10, -125, 102, 70, -76, 99, 89, 101, -80, 38, 4, 112, 97, 75, 49, -123, 80, 103, 94, 118, -121, 96, -75, 119, 84, 20, -87, -116, 121, 77, 111, 87, 64, 84, 6, -58, 3, -97, 11, -16, -4, 46, 99, 112, 52, 121, 115, 77, 102, 3, 48, -63, 84, 104, 102, 82, -79, -127, 104, -125, 115, 104, 107, -127, -79, -83, -123, -118, 111, -76, 124, 126, 107, 121, -61, 105, 45, -76, -121, -80, -125, 87, 55, -125, -125, 100, 55, -76, 110, 51, -127, 16, 51, -19, -120, -114, -120, -125, -60, -60, 84, -79, 36, -114, -81, -40, -6, -76, -118, -114, -120, -87, 88, 100, -126, -60, -87, 35, Byte.MAX_VALUE, -81, -120, -6, -80, 100, 51, -68, -68, 96, 34, 90, -59, -59, 90, -19, 4, 4, -52, 90, 87, -94, 4, -59, 38, 87, 90, 4, -59, -69, -69, -53, 126, 0, -110, -43, 86, 125, 125, -121, 106, 65, 70, 119, 85, -99, 119, 41, -87, -39, 38, 116, 116, 104, -4, -125, 85, 72, -53, -53, -4, 57, 41, 110, 65, 104, 86, 100, 4, -63, 100, 1, 111, -87, 59, 72, 24, 106, 3, 100, 59, 3, -125, 57, 24, 104, -63, 58, 100, 72, -76, -123, 86, 90, 90, -56, -56, 112, 51, 4, 34, 76, -120, -123, -66, 5, 17, 75, 14, 112, 34, 75, 68, -60, -49, 68, -112, 102, 102, 70, 86, 61, 112, -15, 33, 95, -6, 112, 60, 63, 41, 41, 86, 85, 81, 6, 66, 75, 69, 4, 38, 39, 110, 39, 68, 84, -39, -120, Byte.MAX_VALUE, -117, 100, 71, 49, 85, 87, 100, -89, 14, 102, 100, 112, 126, 84, 120, 85, 96, 124, 94, 82, 124, -32, -47, -6, 125, -127, -112, -127, -127, -6, -127, 38, 36, 36, 115, 99, -107, 90, 10, 120, 39, -112, 38, -39, -117, 66, -80, -80, 41, 5, 90, 106, -36, -118, -36, 47, -97, 111, 41, 104, -40, 55, 47, 4, -39, 87, 111, 77, 83, 104, 38, -110, 65, 41, -121, 99, 38, 36, 115, 106, -117, -80, 10, 66, -112, 106, 111, 47, 4, 83, -78, -20, 100, -20, 100, -78, -78, 100, -111, 57, -80, 57, -78, 100, -111, 107, 3, 17, 107, 113, 45, 115, -115, 90, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };
    public static J3G LJLJLJ;

    public static final float LLILZIL(float f) {
        return (f / 2) + 0.5f;
    }

    public static final float LLILZLL(float f) {
        return 0.5f - (f / 2);
    }

    public static final boolean LJJIJ() {
        Room room = (Room) DataChannelGlobal.LJLJJI.mv0(C29044Baa.class);
        if (!LiveToolbarMoreConfig.INSTANCE.enableInteractionPanelOptimize() || room == null || room.getOwnerUserId() != C025908h.LIZ() || room.getStreamType() != LiveMode.VIDEO) {
            return false;
        }
        return true;
    }

    public static final boolean LJJIJIIJI() {
        Room room = (Room) DataChannelGlobal.LJLJJI.mv0(C29044Baa.class);
        if (!LiveToolbarMoreConfig.INSTANCE.enableMorePanelOptimize() || room == null || room.getOwnerUserId() != C025908h.LIZ() || room.getStreamType() != LiveMode.VIDEO) {
            return false;
        }
        return true;
    }

    public static final String LJJJJIZL() {
        return AnonymousClass629.LIZ("randomUUID().toString()");
    }

    /* JADX WARN: Multi-variable type inference failed */
    public static final CreativeInfo LJJJJJ() {
        return new CreativeInfo(null, 0, 0 == true ? 1 : 0, 7, 0 == true ? 1 : 0);
    }

    public static final int LJJJZ() {
        LiveEnhanceRename liveEnhanceRename = LiveEnhanceRename.INSTANCE;
        if (liveEnhanceRename.isV1()) {
            return R.string.ny9;
        }
        if (liveEnhanceRename.isV2()) {
            return R.string.ny_;
        }
        return R.string.mkb;
    }

    public static final int LJLI() {
        LiveToolsRename liveToolsRename = LiveToolsRename.INSTANCE;
        if (liveToolsRename.isV1()) {
            return R.string.on5;
        }
        if (liveToolsRename.isV2()) {
            return R.string.on6;
        }
        return R.string.mre;
    }

    public static void LJIILL() {
        int LIZ = SU4.LIZ(System.currentTimeMillis());
        KUN LJIILIIL = C1A7.LJIILIIL();
        if (LJIILIIL.LIZ(-1, "share_guide_date_day") != LIZ) {
            LJIILIIL.LJ("share_guide_date_day", LIZ);
            LJIILIIL.LJ("share_guide_show_times", 0);
        }
    }

    public static void LJIILLIIL() {
        int LIZ = SU4.LIZ(System.currentTimeMillis());
        if (Keva.getRepo("share_campaign_guide_keva").getInt("share_campaign_guide_date_day", -1) != LIZ) {
            Keva.getRepo("share_campaign_guide_keva").storeInt("share_campaign_guide_date_day", LIZ);
            Keva.getRepo("share_campaign_guide_keva").storeInt("share_campaign_guide_show_times", 0);
        }
    }

    public static double LJIIZILJ() {
        long currentTimeMillis = System.currentTimeMillis();
        C64125PEr.LIZLLL().getClass();
        long LIZ = FQS.LIZ();
        try {
            Thread.sleep(360L);
        } catch (InterruptedException unused) {
        }
        C64125PEr.LIZLLL().getClass();
        return (((FQS.LIZ() - LIZ) * 1000.0d) / (System.currentTimeMillis() - currentTimeMillis)) / FQS.LIZLLL();
    }

    public static final boolean LJJIFFI() {
        if (C1DG.LJIIIIZZ() || C00F.LIZ(31744, 0, "reverse_ai_music_panel_type", true) >= 2 || !AVCommerceServiceImpl.LJIIJ().LJII()) {
            return false;
        }
        return true;
    }

    public static java.util.Map LJJJLIIL() {
        AbstractC37134Ehm abstractC37134Ehm = F5V.LIZLLL().LJLJJLL;
        if (abstractC37134Ehm == null) {
            return C03660Ck.LIZJ("name", "[unknown]");
        }
        return abstractC37134Ehm.LJ();
    }

    public static String LJJLIIIIJ() {
        return C1A7.LJIILIIL().LIZIZ("last_share_type", "");
    }

    public static final String LJIIJ(Aweme aweme) {
        o.LJIIIZ(aweme, "<this>");
        StringBuilder LIZ = X1D.LIZ();
        LIZ.append("AUDIO_");
        String aid = aweme.getAid();
        if (aid == null) {
            aid = "";
        }
        LIZ.append(aid);
        return X1D.LIZIZ(LIZ);
    }

    public static boolean LJIIJJI(Aweme aweme) {
        AwemeACLShare awemeACLShare;
        if (aweme == null || (awemeACLShare = aweme.awemeACLShareInfo) == null || awemeACLShare.getShareListStat() != 0 || AV1.LJIIJJI() || !e1.LIZ(31744, "flip_sharing_button", true, true)) {
            return false;
        }
        int LIZ = SU4.LIZ(System.currentTimeMillis());
        KUN LJIILLIIL = C1A7.LJIILLIIL("now_share_sp");
        if (LJIILLIIL.LIZ(-1, "now_share_guide_date_day") != LIZ) {
            LJIILLIIL.LJ("now_share_guide_date_day", LIZ);
            LJIILLIIL.LJ("now_share_guide_show_times", 0);
        }
        if (LJIILLIIL.LIZ(0, "now_share_guide_show_times") >= 7) {
            return false;
        }
        return true;
    }

    public static final boolean LJIILIIL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (LJJII(videoPublishEditModel) && (LJLLLL(videoPublishEditModel) || LJZ(videoPublishEditModel) || videoPublishEditModel.editMusicSyncMode)) {
            return true;
        }
        return false;
    }

    public static final boolean LJIILJJIL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!H7R.LJJIL(videoPublishEditModel) || videoPublishEditModel.isUploadDuetMode() || videoPublishEditModel.creativeModel.changeAvatarModel.isFromChangeAvatar || !e1.LIZ(31744, "studio_editor_pro_enable_photo_canvas", true, false) || !C145805ns.LIZ()) {
            return false;
        }
        return true;
    }

    public static final String LJIJ(int i) {
        return KMP.LJ("biz_", i);
    }

    public static List LJIJJ(List list) {
        ArrayList arrayList = new ArrayList();
        Iterator it = list.iterator();
        while (it.hasNext()) {
            Music music = (Music) it.next();
            if (music != null) {
                MusicModel convertToMusicModel = music.convertToMusicModel();
                convertToMusicModel.setChallengeUserCount(music.getUserCount());
                convertToMusicModel.setChallengeMusic(true);
                convertToMusicModel.setDataType(0);
                arrayList.add(convertToMusicModel);
            }
        }
        return arrayList;
    }

    public static List LJIJJLI(List list) {
        if (list == null) {
            return null;
        }
        ArrayList arrayList = new ArrayList();
        Iterator it = list.iterator();
        while (it.hasNext()) {
            Music music = (Music) it.next();
            if (music != null) {
                arrayList.add(music.convertToMusicModel());
            }
        }
        return arrayList;
    }

    public static final boolean LJJII(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!C1DG.LJIIIIZZ() && !e1.LIZ(31744, "studio_enable_editpage_voicechanger", true, false)) {
            return false;
        }
        if (!((Boolean) C44404Hbk.LIZ.getValue()).booleanValue()) {
            int i = videoPublishEditModel.mOrigin;
            if (i == 0 || i == 2 || videoPublishEditModel.getEditorProModel().isPipUsed()) {
                Boolean forbidVoiceChangeOnEditPage = C2YJ.LIZIZ.LIZ.getForbidVoiceChangeOnEditPage();
                o.LJIIIIZZ(forbidVoiceChangeOnEditPage, "get().forbidVoiceChangeOnEditPage");
                if (forbidVoiceChangeOnEditPage.booleanValue()) {
                    return false;
                }
            } else if (LJLLLL(videoPublishEditModel) || videoPublishEditModel.isStickPointMode) {
                Boolean forbidVoiceChangeOnEditPage2 = C2YJ.LIZIZ.LIZ.getForbidVoiceChangeOnEditPage();
                o.LJIIIIZZ(forbidVoiceChangeOnEditPage2, "get().forbidVoiceChangeOnEditPage");
                if (forbidVoiceChangeOnEditPage2.booleanValue()) {
                    return false;
                }
            }
        }
        if (videoPublishEditModel.isStickPointMode) {
            return false;
        }
        if (!((Boolean) C44410Hbq.LIZ.getValue()).booleanValue() && LJZL(videoPublishEditModel)) {
            return false;
        }
        if (!((Boolean) C44406Hbm.LIZ.getValue()).booleanValue() && videoPublishEditModel.isDuet()) {
            return false;
        }
        if ((!((Boolean) C44408Hbo.LIZ.getValue()).booleanValue() && videoPublishEditModel.editMusicSyncMode) || videoPublishEditModel.hasGalleryVideo() || videoPublishEditModel.hasGalleryPhoto() || C79004UzY.LJJIJL(videoPublishEditModel.canvasVideoData)) {
            return false;
        }
        if (((LJLLLL(videoPublishEditModel) && !videoPublishEditModel.isCurrentAutoCutMode()) || LJZ(videoPublishEditModel) || videoPublishEditModel.isStickPointMode) && !LJJIII(videoPublishEditModel)) {
            return false;
        }
        return true;
    }

    public static final boolean LJJIII(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.isCutSameVideoType() || C79004UzY.LJJIJL(videoPublishEditModel.canvasVideoData)) {
            return false;
        }
        return H8T.LIZ();
    }

    public static final boolean LJJIIJ(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (LLIFFJFJJ(videoPublishEditModel) == 1 || LLIFFJFJJ(videoPublishEditModel) == 2 || LLIFFJFJJ(videoPublishEditModel) == 3) {
            return true;
        }
        return false;
    }

    public static final boolean LJJIIJZLJL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C60903NvH.LJIIJJI().getAccountService().isChildrenMode() || LJLLI(videoPublishEditModel) || !C1B8.LIZJ() || videoPublishEditModel.isShoutout() || videoPublishEditModel.isEnterFromDM() || H7R.LJJLIIIJJIZ(videoPublishEditModel) || videoPublishEditModel.creativeModel.onThisDayData.isFromOnThisDay()) {
            return false;
        }
        CanvasVideoData canvasVideoData = videoPublishEditModel.canvasVideoData;
        if ((canvasVideoData != null && C79004UzY.LJJIIJ(canvasVideoData)) || C79004UzY.LJJIJL(videoPublishEditModel.canvasVideoData) || H7R.LJJIZ(videoPublishEditModel)) {
            return false;
        }
        CreativeModel creativeModel = videoPublishEditModel.creativeModel;
        o.LJIIIIZZ(creativeModel, "creativeModel");
        if (creativeModel.changeAvatarModel.isFromAiVatar) {
            return false;
        }
        return LJJJLZIJ(videoPublishEditModel);
    }

    public static final boolean LJJIIZ(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.getMCurMusicLength() <= 0) {
            return false;
        }
        if (C1DG.LJIIIIZZ() && videoPublishEditModel.getVideoLength() >= videoPublishEditModel.getMCurMusicLength()) {
            return false;
        }
        return true;
    }

    public static final boolean LJJIIZI(VideoPublishEditModel videoPublishEditModel) {
        boolean z;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C145805ns.LIZ() || C132385Hm.LJII(videoPublishEditModel)) {
            z = true;
        } else {
            z = false;
        }
        if (LLILII(videoPublishEditModel) && z) {
            return true;
        }
        return false;
    }

    public static final boolean LJJIJIIJIL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C78983UzD.LJJJJL(videoPublishEditModel.getEditEffectModel().timeEffect) || !e1.LIZ(31744, "studio_edit_enable_multi_track_video_effect", true, false) || C90193gN.LIZ() || C1DG.LJIIIIZZ() || videoPublishEditModel.isCutSameVideoType() || videoPublishEditModel.isMvThemeVideoType() || videoPublishEditModel.isPhotoMvMode || H7R.LJJJLL(videoPublishEditModel) || C79004UzY.LJJIIJ(videoPublishEditModel.canvasVideoData) || videoPublishEditModel.isUploadDuetMode()) {
            return false;
        }
        return true;
    }

    public static final boolean LJJIJIL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!C44258HYo.LIZ() || !ORY.LJJIJIIJIL(Integer.valueOf(videoPublishEditModel.mShootMode), new Integer[]{10, 11, 14, 18, 16, 17}) || videoPublishEditModel.isStitchMode() || videoPublishEditModel.isDuet() || videoPublishEditModel.isEnterFromDM() || !ORY.LJJIJIIJIL(videoPublishEditModel.mShootWay, new String[]{"direct_shoot", "single_song", "prop_page"}) || videoPublishEditModel.creativeModel.commerceModel.getMission() != null) {
            return false;
        }
        AVChallenge recordChallenge = videoPublishEditModel.creativeModel.commerceModel.getRecordChallenge();
        if (recordChallenge != null && recordChallenge.isCommerce) {
            return false;
        }
        ArrayList<TimeSpeedModelExtension> finalVideoList = videoPublishEditModel.getFinalVideoList();
        o.LJIIIIZZ(finalVideoList, "finalVideoList");
        Iterator<TimeSpeedModelExtension> it = finalVideoList.iterator();
        while (it.hasNext()) {
            TimeSpeedModelExtension next = it.next();
            if (!next.getRecordExtras().isEmpty() && next.getFromRecordExtras("extra_key_ibe_info") != null) {
                return false;
            }
        }
        StickerInfo stickerInfo = videoPublishEditModel.creativeModel.recordEffectModel.stickerInfo;
        if (stickerInfo != null && stickerInfo.isCommerceSticker()) {
            return false;
        }
        return true;
    }

    public static final boolean LJJIJL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C6AI.LIZ() && !videoPublishEditModel.isShoutout()) {
            return true;
        }
        return false;
    }

    public static final boolean LJJIJLIJ(VideoPublishEditModel videoPublishEditModel) {
        boolean booleanValue;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (LLJILLL(videoPublishEditModel)) {
            return true;
        }
        if ((H7R.LJJJJL(videoPublishEditModel) || H7R.LJJJLL(videoPublishEditModel) || videoPublishEditModel.isPhotoMvMode) && !videoPublishEditModel.isCurrentAutoCutMode()) {
            booleanValue = ((Boolean) C44402Hbi.LIZ.getValue()).booleanValue();
        } else {
            booleanValue = ((Boolean) C44400Hbg.LIZ.getValue()).booleanValue();
        }
        if (booleanValue) {
            return true;
        }
        return false;
    }

    /* JADX WARN: Removed duplicated region for block: B:16:0x0037 A[LOOP:0: B:15:0x0035->B:16:0x0037, LOOP_END] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static java.lang.String LJJIL(java.lang.String r8) {
        /*
            java.lang.String r0 = ""
            if (r8 == 0) goto La
            int r1 = r8.length()
            if (r1 != 0) goto Lb
        La:
            return r0
        Lb:
            byte[] r3 = r8.getBytes()
            java.lang.String r2 = "MD5"
            if (r3 == 0) goto L16
            int r1 = r3.length
            if (r1 > 0) goto L1a
        L16:
            r8 = 0
        L17:
            if (r8 != 0) goto L2b
            goto La
        L1a:
            java.security.MessageDigest r1 = java.security.MessageDigest.getInstance(r2)     // Catch: java.security.NoSuchAlgorithmException -> L26
            r1.update(r3)     // Catch: java.security.NoSuchAlgorithmException -> L26
            byte[] r8 = r1.digest()     // Catch: java.security.NoSuchAlgorithmException -> L26
            goto L17
        L26:
            r1 = move-exception
            X.C16880lQ.LLLLIIL(r1)
            goto L16
        L2b:
            int r7 = r8.length
            if (r7 > 0) goto L2f
            goto La
        L2f:
            int r0 = r7 << 1
            char[] r6 = new char[r0]
            r5 = 0
            r4 = 0
        L35:
            if (r5 >= r7) goto L50
            int r3 = r4 + 1
            char[] r2 = X.C44384HbQ.LJLJI
            r1 = r8[r5]
            int r0 = r1 >> 4
            r0 = r0 & 15
            char r0 = r2[r0]
            r6[r4] = r0
            int r4 = r3 + 1
            r0 = r1 & 15
            char r0 = r2[r0]
            r6[r3] = r0
            int r5 = r5 + 1
            goto L35
        L50:
            java.lang.String r0 = new java.lang.String
            r0.<init>(r6)
            goto La
        */
        throw new UnsupportedOperationException("Method not decompiled: X.C44384HbQ.LJJIL(java.lang.String):java.lang.String");
    }

    public static final AlsLogicContainer LJJIZ(ActivityC45651qj activity) {
        o.LJIIIZ(activity, "activity");
        AlsVMContainer alsVMContainer = (AlsVMContainer) C09260Xy.LIZ(activity, AlsVMContainer.class);
        alsVMContainer.gv0(activity);
        if (!C0I4.LIZ) {
            AlsLogicContainer alsLogicContainer = alsVMContainer.LJLILLLLZI;
            if (alsLogicContainer != null) {
                return alsLogicContainer;
            }
            throw new RuntimeException("AlsLogicContainer not found");
        }
        return LLIIJLIL(activity);
    }

    public static final AlsLogicContainer LJJJ(WMH scene) {
        o.LJIIIZ(scene, "scene");
        return LJJJI(scene);
    }

    public static final AlsLogicContainer LJJJI(WMH scene) {
        o.LJIIIZ(scene, "scene");
        ViewModel viewModel = C165716et.LIZ(scene).get(AlsVMContainer.class);
        o.LJIIIIZZ(viewModel, "SceneViewModelProviders.…sVMContainer::class.java]");
        AlsVMContainer alsVMContainer = (AlsVMContainer) viewModel;
        if (!C0I4.LIZ) {
            AlsLogicContainer alsLogicContainer = alsVMContainer.LJLILLLLZI;
            if (alsLogicContainer != null) {
                return alsLogicContainer;
            }
            throw new RuntimeException("AlsLogicContainer not found");
        }
        return LLIILII(scene, null);
    }

    public static final AlsLogicContainer LJJJIL(WMH scene) {
        o.LJIIIZ(scene, "scene");
        try {
            return LJJJI(scene);
        } catch (Throwable unused) {
            return null;
        }
    }

    public static final XJ8 LJJJJ(LifecycleOwner lifecycleOwner) {
        if (lifecycleOwner instanceof Fragment) {
            return XJ8.FRAGMENT;
        }
        if (lifecycleOwner instanceof ActivityC45651qj) {
            return XJ8.ACTIVITY;
        }
        if (lifecycleOwner instanceof Widget) {
            return XJ8.WIDGET;
        }
        return XJ8.FRAGMENT;
    }

    public static final String LJJJJI(UrlModel urlModel) {
        o.LJIIIZ(urlModel, "<this>");
        List<String> urlList = urlModel.getUrlList();
        if (urlList != null) {
            return (String) ORZ.LJLLLL(urlList);
        }
        return null;
    }

    public static final java.util.Map LJJJJJL(DraftDeleteResult draftDeleteResult) {
        HashMap hashMap = new HashMap();
        hashMap.put("creation_id", draftDeleteResult.getCreationId());
        hashMap.put("error_code", String.valueOf(draftDeleteResult.getErrorCode()));
        hashMap.put("draft_type", String.valueOf(draftDeleteResult.getDraftType()));
        hashMap.put("save_draft_time", draftDeleteResult.getSaveDraftTime());
        hashMap.put("save_draft_app_version", String.valueOf(draftDeleteResult.getSaveDraftAppVersion()));
        hashMap.put("delete_duration", String.valueOf(draftDeleteResult.getDeleteDuration()));
        hashMap.put("delete_scene", draftDeleteResult.getDeleteScene());
        hashMap.put("delete_db_Duration", String.valueOf(draftDeleteResult.getDeleteDBResult().getDbDeleteDuration()));
        hashMap.put("delete_file_duration", String.valueOf(draftDeleteResult.getDeleteFileResult().getDeleteFileDuration()));
        if (draftDeleteResult.getCodeException() != null) {
            String stackTraceString = android.util.Log.getStackTraceString(draftDeleteResult.getCodeException());
            o.LJIIIIZZ(stackTraceString, "getStackTraceString(codeException)");
            hashMap.put("code_exception", stackTraceString);
        }
        hashMap.put("draft_aweme_type", String.valueOf(draftDeleteResult.getDraftAwemeType()));
        return hashMap;
    }

    public static final java.util.Map LJJJJL(DraftRestoreResult draftRestoreResult) {
        String str;
        o.LJIIIZ(draftRestoreResult, "<this>");
        HashMap hashMap = new HashMap();
        hashMap.put("creation_id", draftRestoreResult.getCreationId());
        hashMap.put("error_code", String.valueOf(draftRestoreResult.getErrorCode()));
        hashMap.put("draft_type", String.valueOf(draftRestoreResult.getDraftType()));
        hashMap.put("save_draft_time", draftRestoreResult.getSaveDraftTime());
        hashMap.put("save_draft_app_version", String.valueOf(draftRestoreResult.getSaveDraftAppVersion()));
        hashMap.put("use_creative_file_standard", String.valueOf(draftRestoreResult.getUseCreativeFileStandard()));
        hashMap.put("restore_duration", String.valueOf(draftRestoreResult.getDuration()));
        hashMap.put("check_duration", String.valueOf(draftRestoreResult.getCheckResult().getCheckDuration()));
        if (!draftRestoreResult.getCheckResult().isSuc() || (!draftRestoreResult.getCheckResult().getFileCheckResults().getNotBlockCreativeList().isEmpty())) {
            hashMap.put("check_result", LLIIII(draftRestoreResult.getCheckResult(), 6));
        }
        hashMap.put("restore_file_duration", String.valueOf(draftRestoreResult.getRestoreFileResults().getFileRestoreDuration()));
        if (draftRestoreResult.isPublishedDraft()) {
            str = "1";
        } else {
            str = CardStruct.IStatusCode.DEFAULT;
        }
        hashMap.put("is_posted_draft", str);
        if (!draftRestoreResult.getRestoreFileResults().isSuc() || (!draftRestoreResult.getRestoreFileResults().getNotBlockCreativeList().isEmpty())) {
            hashMap.put("restore_file_result", LLIIII(draftRestoreResult.getRestoreFileResults(), 6));
        }
        if (draftRestoreResult.getCodeException() != null) {
            String stackTraceString = android.util.Log.getStackTraceString(draftRestoreResult.getCodeException());
            o.LJIIIIZZ(stackTraceString, "getStackTraceString(codeException)");
            hashMap.put("code_exception", stackTraceString);
        }
        if (!draftRestoreResult.isSuc()) {
            hashMap.put("file_tree_info", draftRestoreResult.getFileTreeInfo());
        }
        hashMap.put("draft_aweme_type", String.valueOf(draftRestoreResult.getDraftAwemeType()));
        return hashMap;
    }

    public static final java.util.Map LJJJJLI(DraftSaveResult draftSaveResult) {
        String str;
        o.LJIIIZ(draftSaveResult, "<this>");
        HashMap hashMap = new HashMap();
        hashMap.put("creation_id", draftSaveResult.getCreationId());
        hashMap.put("error_code", String.valueOf(draftSaveResult.getErrorCode()));
        hashMap.put("draft_type", String.valueOf(draftSaveResult.getDraftType()));
        hashMap.put("save_draft_from", String.valueOf(draftSaveResult.getDraftFrom()));
        hashMap.put("use_creative_file_standard", String.valueOf(draftSaveResult.getUseCreativeFileStandard()));
        hashMap.put("save_duration", String.valueOf(draftSaveResult.getDuration()));
        hashMap.put("save_pre_process_duration", String.valueOf(draftSaveResult.getPreProcessResults().getPreProcessDuration()));
        if (!draftSaveResult.getPreProcessResults().isSuc() || (!draftSaveResult.getPreProcessResults().getNotBlockCreativeList().isEmpty())) {
            hashMap.put("save_pre_process_result", LLIIII(draftSaveResult.getPreProcessResults(), 6));
        }
        hashMap.put("check_duration", String.valueOf(draftSaveResult.getCheckResult().getCheckDuration()));
        if (!draftSaveResult.getCheckResult().isSuc() || (!draftSaveResult.getCheckResult().getFileCheckResults().getNotBlockCreativeList().isEmpty())) {
            hashMap.put("check_result", LLIIII(draftSaveResult.getCheckResult(), 6));
        }
        hashMap.put("save_file_duration", String.valueOf(draftSaveResult.getSaveFileResults().getFileSaveDuration()));
        if (!draftSaveResult.getSaveFileResults().isSuc() || (!draftSaveResult.getSaveFileResults().getNotBlockCreativeList().isEmpty())) {
            hashMap.put("save_file_result", LLIIII(draftSaveResult.getSaveFileResults(), 6));
        }
        hashMap.put("save_db_duration", String.valueOf(draftSaveResult.getSaveDBResult().getDbSaveDuration()));
        if (!draftSaveResult.getSaveDBResult().isSuc()) {
            hashMap.put("save_db_result", LLIIII(draftSaveResult.getSaveDBResult(), 6));
        }
        hashMap.put("save_draft_time", draftSaveResult.getSaveDraftTime());
        hashMap.put("save_draft_app_version", String.valueOf(draftSaveResult.getSaveDraftAppVersion()));
        if (draftSaveResult.isPublishedDraft()) {
            str = "1";
        } else {
            str = CardStruct.IStatusCode.DEFAULT;
        }
        hashMap.put("is_posted_draft", str);
        if (draftSaveResult.getCodeException() != null) {
            String stackTraceString = android.util.Log.getStackTraceString(draftSaveResult.getCodeException());
            o.LJIIIIZZ(stackTraceString, "getStackTraceString(codeException)");
            hashMap.put("code_exception", stackTraceString);
        }
        if (!draftSaveResult.isSuc()) {
            hashMap.put("file_tree_info", draftSaveResult.getFileTreeInfo());
        }
        hashMap.put(WM7.SCENE_SERVICE, draftSaveResult.getDraftScene());
        hashMap.put("draft_aweme_type", String.valueOf(draftSaveResult.getDraftAwemeType()));
        return hashMap;
    }

    public static final String LJJJJLL(VideoPublishEditModel videoPublishEditModel) {
        AutoCutThemeData autoCutThemeData;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        Iterator<AutoCutThemeData> it = videoPublishEditModel.creativeModel.autoCutModel.templateList.iterator();
        while (true) {
            if (it.hasNext()) {
                autoCutThemeData = it.next();
                AutoCutThemeData autoCutThemeData2 = autoCutThemeData;
                if (autoCutThemeData2.LIZ() == AnonymousClass636.LJJ(videoPublishEditModel.creativeModel.autoCutModel.curSource) && autoCutThemeData2.indexFromSource == videoPublishEditModel.creativeModel.autoCutModel.curIndexFromSource) {
                    break;
                }
            } else {
                autoCutThemeData = null;
                break;
            }
        }
        AutoCutThemeData autoCutThemeData3 = autoCutThemeData;
        if (autoCutThemeData3 == null) {
            return null;
        }
        return autoCutThemeData3.templateId;
    }

    public static final int LJJJJZ(int i) {
        return C04330Ez.LIZIZ(EF7.LIZIZ(), i);
    }

    public static final float LJJJLL(int i) {
        return (EF7.LIZIZ().getResources().getDisplayMetrics().density * i) + 0.5f;
    }

    public static final boolean LJJJLZIJ(VideoPublishEditModel videoPublishEditModel) {
        boolean z;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (H7R.LJJJJI(videoPublishEditModel) || H7R.LJJLIIIJJIZ(videoPublishEditModel) || videoPublishEditModel.getImageAlbumData() != null) {
            return false;
        }
        if (videoPublishEditModel.creativeModel.stickerModel.isQADraft == null) {
            List<InteractStickerStruct> LJI = C164826dS.LJI(videoPublishEditModel.getMainBusinessContext(), 12, EnumC164816dR.TRACK_PAGE_EDIT);
            StickerNewEngineModel stickerNewEngineModel = videoPublishEditModel.creativeModel.stickerModel;
            if (LJI == null || LJI.isEmpty()) {
                z = true;
            } else {
                z = false;
            }
            stickerNewEngineModel.isQADraft = Boolean.valueOf(!z);
        }
        if (o.LJ(videoPublishEditModel.creativeModel.stickerModel.isQADraft, Boolean.TRUE)) {
            return false;
        }
        if (!videoPublishEditModel.creativeModel.stickerModel.addYoursStickerModels.isEmpty()) {
            return true;
        }
        if (C1DG.LJIIIIZZ() || !C234869Jq.LIZ()) {
            return false;
        }
        return true;
    }

    public static final String LJJL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if ((LJLJJI(videoPublishEditModel) && videoPublishEditModel.voiceVolume != 0.0f) || videoPublishEditModel.hasRecord()) {
            return "1";
        }
        return CardStruct.IStatusCode.DEFAULT;
    }

    public static final boolean LJJLI(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        EffectPointModel timeEffect = videoPublishEditModel.getTimeEffect();
        if (timeEffect == null) {
            return false;
        }
        if (!o.LJ(timeEffect.getKey(), "2") && !o.LJ(timeEffect.getKey(), "3")) {
            return false;
        }
        return true;
    }

    public static final String LJJLIIIJ(VideoPublishEditModel videoPublishEditModel) {
        MusicBuzModel musicBuzModel;
        String str;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        CreativeModel creativeModel = videoPublishEditModel.creativeModel;
        if (creativeModel == null || (musicBuzModel = creativeModel.musicBuzModel) == null || (str = musicBuzModel.recommendSourceFrom) == null) {
            return "other_music";
        }
        return str;
    }

    public static final C82622Wbi LJJLIIIJILLIZJL(AbstractC40841iy getObjectContainer) {
        AlsLogicContainer LLIIL;
        o.LJIIIZ(getObjectContainer, "$this$getObjectContainer");
        ViewModel viewModel = C0I9.LIZ(getObjectContainer).get(AlsVMContainer.class);
        o.LJIIIIZZ(viewModel, "ComponentViewModelProvid…sVMContainer::class.java]");
        AlsVMContainer alsVMContainer = (AlsVMContainer) viewModel;
        if (!C0I4.LIZ) {
            LLIIL = alsVMContainer.LJLILLLLZI;
            if (LLIIL == null) {
                throw new RuntimeException("AlsLogicContainer not found");
            }
        } else {
            LLIIL = LLIIL(getObjectContainer, null);
        }
        return LLIIL.LJLLL;
    }

    public static final C82622Wbi LJJLIIIJJI(WMH getObjectContainer) {
        o.LJIIIZ(getObjectContainer, "$this$getObjectContainer");
        AlsLogicContainer LJJJIL = LJJJIL(getObjectContainer);
        if (LJJJIL != null) {
            return LJJJIL.LJLLL;
        }
        return null;
    }

    public static final int LJJLIIIJJIZ(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        VideoFileInfo LJJLIIIJLLLLLLLZ = LJJLIIIJLLLLLLLZ(videoPublishEditModel);
        if (LJJLIIIJLLLLLLLZ != null) {
            return LJJLIIIJLLLLLLLZ.getBitrate();
        }
        return 0;
    }

    public static final int LJJLIIIJL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        VideoFileInfo LJJLIIIJLLLLLLLZ = LJJLIIIJLLLLLLLZ(videoPublishEditModel);
        if (LJJLIIIJLLLLLLLZ != null) {
            return LJJLIIIJLLLLLLLZ.getCodecType();
        }
        return -1;
    }

    public static final String LJJLIIIJLJLI(VideoPublishEditModel videoPublishEditModel) {
        String resolution;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        VideoFileInfo LJJLIIIJLLLLLLLZ = LJJLIIIJLLLLLLLZ(videoPublishEditModel);
        if (LJJLIIIJLLLLLLLZ == null || (resolution = LJJLIIIJLLLLLLLZ.getResolution()) == null) {
            return "";
        }
        return resolution;
    }

    public static final VideoFileInfo LJJLIIIJLLLLLLLZ(VideoPublishEditModel videoPublishEditModel) {
        String videoPath;
        int[] LIZIZ;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!videoPublishEditModel.isUploadVideo()) {
            if (videoPublishEditModel.getOriginalVideoInfo() == null && (videoPath = videoPublishEditModel.videoPath()) != null && videoPath.length() != 0 && (LIZIZ = C43495H5f.LIZIZ(videoPublishEditModel.videoPath())) != null) {
                int i = 0;
                videoPublishEditModel.setOriginalVideoInfo(new VideoFileInfo(LIZIZ[0], LIZIZ[1], LIZIZ[3], LIZIZ[7], LIZIZ[6], LIZIZ[8], i, i, 0.0f, 448, null));
            }
            return videoPublishEditModel.getOriginalVideoInfo();
        }
        ArrayList<ImportVideoInfo> arrayList = videoPublishEditModel.importInfoList;
        if (arrayList == null || arrayList.isEmpty()) {
            return null;
        }
        Iterator<ImportVideoInfo> it = videoPublishEditModel.importInfoList.iterator();
        while (it.hasNext()) {
            ImportVideoInfo next = it.next();
            if (next.getBitRate() != 0 && next.getEncodeId() != 0 && next.getOriginFps() != 0) {
                int i2 = 0;
                return new VideoFileInfo(next.getVideoWidth(), next.getVideoHeight(), next.getDuration(), next.getOriginFps(), next.getBitRate(), next.getEncodeId(), i2, i2, 0.0f, 448, null);
            }
        }
        return null;
    }

    public static final FeelgoodSurveyQuestion LJJLIIJ(FeelgoodSurveyQuestionnaire feelgoodSurveyQuestionnaire) {
        List<FeelgoodPageConfig> pageConfig;
        FeelgoodPageConfig feelgoodPageConfig;
        List<FeelgoodSurveyQuestion> questionList;
        FeelgoodShowConfig showConfig = feelgoodSurveyQuestionnaire.getShowConfig();
        FeelgoodSurveyQuestion feelgoodSurveyQuestion = null;
        if (showConfig == null || (pageConfig = showConfig.getPageConfig()) == null || (feelgoodPageConfig = (FeelgoodPageConfig) ORZ.LJLLLLLL(0, pageConfig)) == null || (questionList = feelgoodPageConfig.getQuestionList()) == null) {
            return null;
        }
        ListIterator<FeelgoodSurveyQuestion> listIterator = questionList.listIterator(questionList.size());
        while (true) {
            if (!listIterator.hasPrevious()) {
                break;
            }
            FeelgoodSurveyQuestion previous = listIterator.previous();
            Integer questionType = previous.getQuestionType();
            int type = EnumC44413Hbt.SINGLE_CHOICE.getType();
            if (questionType != null && questionType.intValue() == type) {
                feelgoodSurveyQuestion = previous;
                break;
            }
        }
        return feelgoodSurveyQuestion;
    }

    public static final List LJJLIL(FeelgoodSurveyQuestionnaire feelgoodSurveyQuestionnaire) {
        List<FeelgoodPageConfig> pageConfig;
        FeelgoodPageConfig feelgoodPageConfig;
        List<FeelgoodSurveyQuestion> questionList;
        FeelgoodSurveyQuestion feelgoodSurveyQuestion;
        RatingData ratingData;
        FeelgoodShowConfig showConfig = feelgoodSurveyQuestionnaire.getShowConfig();
        if (showConfig == null || (pageConfig = showConfig.getPageConfig()) == null || (feelgoodPageConfig = (FeelgoodPageConfig) ORZ.LJLLLLLL(0, pageConfig)) == null || (questionList = feelgoodPageConfig.getQuestionList()) == null) {
            return null;
        }
        ListIterator<FeelgoodSurveyQuestion> listIterator = questionList.listIterator(questionList.size());
        while (true) {
            if (listIterator.hasPrevious()) {
                feelgoodSurveyQuestion = listIterator.previous();
                Integer questionType = feelgoodSurveyQuestion.getQuestionType();
                int type = EnumC44413Hbt.RATING_CHOICE.getType();
                if (questionType != null && questionType.intValue() == type) {
                    break;
                }
            } else {
                feelgoodSurveyQuestion = null;
                break;
            }
        }
        FeelgoodSurveyQuestion feelgoodSurveyQuestion2 = feelgoodSurveyQuestion;
        if (feelgoodSurveyQuestion2 == null || (ratingData = feelgoodSurveyQuestion2.getRatingData()) == null) {
            return null;
        }
        return ratingData.getOptionList();
    }

    public static final boolean LJJLJLI(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!videoPublishEditModel.mIsFromDraft && !H7R.LJJIJIL(videoPublishEditModel) && !LJLLLLLL(videoPublishEditModel)) {
            String str = videoPublishEditModel.enterFrom;
            if (str == null) {
                str = "";
            }
            if (!C46140I8y.LIZ(str)) {
                return true;
            }
        }
        return false;
    }

    public static final List LJJLL(FeelgoodSurveyQuestionnaire feelgoodSurveyQuestionnaire) {
        FeelgoodSingleChoiceData singleChoiceData;
        FeelgoodSurveyQuestion LJJLIIJ = LJJLIIJ(feelgoodSurveyQuestionnaire);
        if (LJJLIIJ != null && (singleChoiceData = LJJLIIJ.getSingleChoiceData()) != null) {
            return singleChoiceData.getOptionList();
        }
        return null;
    }

    public static final String LJJZ(int i) {
        return C1DD.LIZLLL(i, "AppContextManager.getApp…ontext().getString(resId)");
    }

    public static final boolean LJJZZI(VideoPublishEditModel videoPublishEditModel) {
        List<CanvasFilterParam> transformList;
        CanvasExtra extra;
        ForwardCanvasExtra forwardCanvasExtra;
        ForwardVideo forwardVideo;
        String sourceVID;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        CanvasVideoData canvasVideoData = videoPublishEditModel.canvasVideoData;
        if (canvasVideoData == null || !C79004UzY.LJJIII(canvasVideoData) || (transformList = canvasVideoData.getTransformList()) == null || transformList.isEmpty() || (extra = canvasVideoData.getExtra()) == null || (forwardCanvasExtra = extra.getForwardCanvasExtra()) == null || (forwardVideo = forwardCanvasExtra.getForwardVideo()) == null || (sourceVID = forwardVideo.getSourceVID()) == null || sourceVID.length() == 0) {
            return false;
        }
        if ((!C79004UzY.LJJIZ(canvasVideoData) || !e1.LIZ(31744, "enable_quick_share_story_publish_cloud_merge", true, false)) && (C79004UzY.LJJIZ(canvasVideoData) || !e1.LIZ(31744, "enable_normal_share_story_publish_cloud_merge", true, false))) {
            return false;
        }
        if ((videoPublishEditModel.mIsFromDraft && videoPublishEditModel.creativeModel.forwardEditPublishData == null) || LJLJI(videoPublishEditModel)) {
            return false;
        }
        return true;
    }

    public static final String LJJZZIII(FeelgoodSurveyQuestionnaire feelgoodSurveyQuestionnaire) {
        List<FeelgoodPageConfig> pageConfig;
        FeelgoodPageConfig feelgoodPageConfig;
        FeelgoodHeaderConfig headerConfig;
        String title;
        FeelgoodShowConfig showConfig = feelgoodSurveyQuestionnaire.getShowConfig();
        if (showConfig == null || (pageConfig = showConfig.getPageConfig()) == null || (feelgoodPageConfig = (FeelgoodPageConfig) ORZ.LJLLLLLL(0, pageConfig)) == null || (headerConfig = feelgoodPageConfig.getHeaderConfig()) == null || (title = headerConfig.getTitle()) == null) {
            return "";
        }
        return title;
    }

    public static final IMUser LJLIIIL(C81243Gu c81243Gu) {
        o.LJIIIZ(c81243Gu, "<this>");
        return C80533Eb.LJFF(c81243Gu.getUid(), c81243Gu.getSecUid());
    }

    public static final int LJLIIL(InterfaceC143655kP api) {
        o.LJIIIZ(api, "api");
        InterfaceC153045zY value = api.Kh().getValue();
        if (value != null) {
            return value.getDuration();
        }
        return 0;
    }

    public static final boolean LJLIL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.creativeModel.inlineCaptionModel != null || videoPublishEditModel.captionStruct != null) {
            return true;
        }
        return false;
    }

    public static final boolean LJLILLLLZI(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        AudioRecorderParam audioRecorderParam = videoPublishEditModel.veAudioRecorderParam;
        if (audioRecorderParam != null && (audioRecorderParam.hasRecord() || !videoPublishEditModel.veAudioRecorderParam.getNeedOriginalSound())) {
            return true;
        }
        return false;
    }

    public static final boolean LJLJI(VideoPublishEditModel videoPublishEditModel) {
        ArrayList arrayList;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C78983UzD.LJJJJL(videoPublishEditModel.getTimeEffect())) {
            return true;
        }
        ArrayList<EffectPointModel> effectList = videoPublishEditModel.getEffectList();
        if (effectList != null) {
            arrayList = new ArrayList();
            Iterator<EffectPointModel> it = effectList.iterator();
            while (it.hasNext()) {
                EffectPointModel next = it.next();
                if (!o.LJ(next.getKey(), CardStruct.IStatusCode.DEFAULT)) {
                    arrayList.add(next);
                }
            }
        } else {
            arrayList = null;
        }
        if (C32151Nz.LJJIIZI(arrayList) || videoPublishEditModel.hasInfoStickers() || videoPublishEditModel.hasInfoStickers() || LJLILLLLZI(videoPublishEditModel) || videoPublishEditModel.veAudioRecorderParam != null || videoPublishEditModel.mSelectedId != 0 || videoPublishEditModel.veAudioEffectParam != null || videoPublishEditModel.captionStruct != null) {
            return true;
        }
        if (videoPublishEditModel.isAutoEnhanceEnable() && videoPublishEditModel.autoEnhanceOn) {
            return true;
        }
        return false;
    }

    public static final boolean LJLJJI(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        return videoPublishEditModel.hasOriginalAudio(HRX.LIZLLL());
    }

    public static final boolean LJLJJL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (LJLJJI(videoPublishEditModel)) {
            return true;
        }
        AudioRecorderParam audioRecorderParam = videoPublishEditModel.veAudioRecorderParam;
        if (audioRecorderParam != null && audioRecorderParam.getHasOriginalSound()) {
            return true;
        }
        return false;
    }

    public static final boolean LJLJJLL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (LJLJJL(videoPublishEditModel) && videoPublishEditModel.voiceVolume > 0.0f) {
            return true;
        }
        return false;
    }

    public static final boolean LJLJL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        return C78685UuP.LJJJZ(videoPublishEditModel.creativeModel.musicBuzModel.stsTemplateId);
    }

    /* JADX WARN: Code restructure failed: missing block: B:13:0x0021, code lost:
    
        if (r1 != null) goto L7;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static final boolean LJLJLJ(java.lang.String r3) {
        /*
            boolean r0 = com.ss.android.ugc.effectmanager.knadapt.UseKNPlatform.enableKNPlatform
            r1 = 0
            r2 = 0
            if (r0 == 0) goto L1d
            X.XAf r0 = X.C84399XAl.LIZ()
            X.XAq r0 = r0.LIZLLL()
            java.lang.String r1 = r0.realFindResourceUri(r2, r1, r3)
            if (r1 != 0) goto L16
            java.lang.String r1 = ""
        L16:
            int r0 = r1.length()
            if (r0 != 0) goto L24
        L1c:
            return r2
        L1d:
            java.lang.String r1 = com.ss.android.ugc.effectmanager.DownloadableModelSupportResourceFinder.findResourceUri(r1, r3)
            if (r1 == 0) goto L1c
            goto L16
        L24:
            boolean r0 = X.C1B6.LIZIZ(r1)
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: X.C44384HbQ.LJLJLJ(java.lang.String):boolean");
    }

    public static final boolean LJLJLLL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        ArrayList arrayList = new ArrayList();
        String str = videoPublishEditModel.mRecordFilterLabels;
        if (str != null) {
            arrayList.addAll(s.LJLJJL(str, new String[]{","}, 0, 6));
        }
        String str2 = videoPublishEditModel.mSelectedFilterLabel;
        if (str2 != null) {
            arrayList.add(str2);
        }
        Iterator it = arrayList.iterator();
        while (it.hasNext()) {
            String str3 = (String) it.next();
            if (str3.length() > 0 && !o.LJ(str3, "normal")) {
                return false;
            }
        }
        return true;
    }

    public static final boolean LJLL(VideoPublishEditModel videoPublishEditModel) {
        AutoCutThemeData autoCutThemeData;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!videoPublishEditModel.isCurrentAutoCutMode()) {
            return false;
        }
        Iterator<AutoCutThemeData> it = videoPublishEditModel.creativeModel.autoCutModel.templateList.iterator();
        while (true) {
            if (it.hasNext()) {
                autoCutThemeData = it.next();
                AutoCutThemeData autoCutThemeData2 = autoCutThemeData;
                if (autoCutThemeData2.LIZ() == AnonymousClass636.LJJ(videoPublishEditModel.creativeModel.autoCutModel.curSource) && autoCutThemeData2.indexFromSource == videoPublishEditModel.creativeModel.autoCutModel.curIndexFromSource) {
                    break;
                }
            } else {
                autoCutThemeData = null;
                break;
            }
        }
        AutoCutThemeData autoCutThemeData3 = autoCutThemeData;
        if (autoCutThemeData3 == null || autoCutThemeData3.templateType != EnumC43998HOo.CUT_SAME.getValue()) {
            return false;
        }
        return true;
    }

    public static final boolean LJLLI(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        return videoPublishEditModel.creativeModel.stickerModel.isFromFollowAddYours;
    }

    public static final boolean LJLLILLLL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if ((videoPublishEditModel.getOriginal() != 1 && videoPublishEditModel.getOriginal() != 2) || !ORY.LJJIJIIJIL(Integer.valueOf(videoPublishEditModel.mShootMode), new Integer[]{15, 17, 20, 16})) {
            return false;
        }
        return true;
    }

    public static boolean LJLLJ(String str) {
        if (TextUtils.isEmpty(str) || str.equalsIgnoreCase("unknown") || str.equalsIgnoreCase("None")) {
            return true;
        }
        for (int i = 0; i < str.length(); i++) {
            if (str.charAt(i) != '0') {
                return false;
            }
        }
        return true;
    }

    public static synchronized boolean LJLLL(Context context) {
        Boolean bool;
        synchronized (C44384HbQ.class) {
            Context LLLLL = C16880lQ.LLLLL(context);
            Context context2 = LJLIL;
            if (context2 != null && (bool = LJLILLLLZI) != null && context2 == LLLLL) {
                return bool.booleanValue();
            }
            LJLILLLLZI = null;
            if (C44389HbV.LIZ()) {
                LJLILLLLZI = Boolean.valueOf(LLLLL.getPackageManager().isInstantApp());
            } else {
                try {
                    context.getClassLoader().loadClass("com.google.android.instantapps.supervisor.InstantAppsRuntime");
                    LJLILLLLZI = Boolean.TRUE;
                } catch (ClassNotFoundException unused) {
                    LJLILLLLZI = Boolean.FALSE;
                }
            }
            LJLIL = LLLLL;
            return LJLILLLLZI.booleanValue();
        }
    }

    public static final boolean LJLLLL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.isMvThemeVideoType() || videoPublishEditModel.isCutSameVideoType()) {
            return true;
        }
        return false;
    }

    public static final boolean LJLLLLLL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (o.LJ(videoPublishEditModel.mShootWay, "change_ban_music") || o.LJ(videoPublishEditModel.mShootWay, "l8_import_music_edit")) {
            return true;
        }
        return false;
    }

    public static final boolean LJZ(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.isCurrentAutoCutMode()) {
            return !HRX.LIZLLL();
        }
        if ((!videoPublishEditModel.isFastImport && !videoPublishEditModel.hasOriginalSound()) || videoPublishEditModel.isMuted) {
            return true;
        }
        return false;
    }

    public static final boolean LJZI(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!videoPublishEditModel.isUploadVideo() && (H7R.LJJJLL(videoPublishEditModel) || videoPublishEditModel.isPhotoMvMode)) {
            return true;
        }
        return false;
    }

    public static final boolean LJZL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.getStitchParams() != null) {
            return true;
        }
        return false;
    }

    public static final boolean LL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.mFromCut || videoPublishEditModel.mFromMultiCut) {
            return true;
        }
        return false;
    }

    public static final boolean LLD(VideoPublishEditModel videoPublishEditModel) {
        MultiEditVideoRecordData multiEditVideoRecordData;
        List<MultiEditVideoSegmentRecordData> list;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        MultiEditVideoStatusRecordData multiEditVideoStatusRecordData = videoPublishEditModel.multiEditVideoRecordData;
        if (multiEditVideoStatusRecordData != null && (multiEditVideoRecordData = multiEditVideoStatusRecordData.curMultiEditVideoRecordData) != null && (list = multiEditVideoRecordData.segmentDataList) != null) {
            ArrayList arrayList = new ArrayList(C32I.LJJL(list, 10));
            Iterator<MultiEditVideoSegmentRecordData> it = list.iterator();
            while (it.hasNext()) {
                if (it.next().audioSpeed != 1.0f) {
                    return true;
                }
                arrayList.add(C76800UCe.LIZ);
            }
        }
        return false;
    }

    public static boolean LLF(String str) {
        int length;
        if (str == null || (length = str.length()) < 13 || length > 160) {
            return false;
        }
        int i = 0;
        do {
            char charAt = str.charAt(i);
            if (charAt >= '0') {
                if (charAt > '9') {
                    if (charAt >= 'a') {
                        if (charAt > 'f') {
                            return false;
                        }
                    } else if (charAt >= 'A') {
                        if (charAt > 'F') {
                            return false;
                        }
                    }
                }
                i++;
            }
            if (charAt != '-') {
                return false;
            }
            i++;
        } while (i < length);
        return true;
    }

    public static final boolean LLFF(View view) {
        if (view == null || view.getVisibility() != 0) {
            return false;
        }
        return true;
    }

    public static final C5H3 LLFFF(InterfaceC65784Pro interfaceC65784Pro) {
        return C221108m2.LIZ(EnumC221088m0.NONE, interfaceC65784Pro);
    }

    public static final boolean LLFII(Room room) {
        return !((IShareService) CN1.LIZ(IShareService.class)).vo0(room);
    }

    public static final void LLFZ(String msg) {
        o.LJIIIZ(msg, "msg");
        PopupManager.LIZLLL().LIZIZ.invoke("PopupManager", msg);
    }

    public static final C32265ClR LLI(JSONObject jSONObject) {
        long j;
        Long l;
        Integer num;
        Double LJJIJL;
        Long LJJIZ;
        try {
            String string = JSONObjectProtectorUtils.getString(jSONObject, "room_id");
            long j2 = 0;
            if (string != null && (LJJIZ = C38350F3i.LJJIZ(string)) != null) {
                j = LJJIZ.longValue();
            } else {
                j = 0;
            }
            String string2 = JSONObjectProtectorUtils.getString(jSONObject, "effect_id");
            if (string2 != null) {
                l = C38350F3i.LJJIZ(string2);
            } else {
                l = null;
            }
            String string3 = JSONObjectProtectorUtils.getString(jSONObject, "price_level");
            if (string3 != null) {
                num = C38350F3i.LJJIL(string3);
            } else {
                num = null;
            }
            String string4 = JSONObjectProtectorUtils.getString(jSONObject, "current_anchor_effect_play_time");
            if (string4 != null && (LJJIJL = C38350F3i.LJJIJL(string4)) != null) {
                j2 = (long) LJJIJL.doubleValue();
            }
            if (l != null && num != null) {
                return new C32265ClR(num.intValue(), j, l.longValue(), j2);
            }
        } catch (Throwable unused) {
        }
        return null;
    }

    public static final int LLIFFJFJJ(VideoPublishEditModel videoPublishEditModel) {
        Integer valueOf;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (!videoPublishEditModel.mIsFromDraft || !LJLIL(videoPublishEditModel) || videoPublishEditModel.isFromCrash()) {
            return C6FE.LIZ();
        }
        InlineCaptionExperimentInformation inlineCaptionExperimentInformation = videoPublishEditModel.creativeModel.inlineCaptionExperimentInformation;
        if (inlineCaptionExperimentInformation != null && (valueOf = Integer.valueOf(inlineCaptionExperimentInformation.experimentType)) != null) {
            if (valueOf.intValue() == 0) {
                if (C6FE.LIZ() != 1) {
                    return 0;
                }
                return 1;
            }
            if (valueOf.intValue() == 1) {
                if (C6FE.LIZ() == 0) {
                    return 0;
                }
                return 1;
            }
            if (valueOf != null) {
                if (valueOf.intValue() == 2) {
                    if (C6FE.LIZ() == 3) {
                        return 3;
                    }
                    return 2;
                }
                if (valueOf.intValue() == 3) {
                    if (C6FE.LIZ() != 2) {
                        return 3;
                    }
                    return 2;
                }
            }
        }
        return C6FE.LIZ();
    }

    public static void LLII(String str) {
        C1A7.LJIILIIL().LJFF("last_share_type", str);
    }

    public static final boolean LLIIIILZ(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C143835kh.LIZ() && !videoPublishEditModel.getEditEffectModel().forceEnterMultiTrack) {
            EditEffectModel editEffectModel = videoPublishEditModel.getEditEffectModel();
            ArrayList<EffectPointModel> effectList = videoPublishEditModel.getEffectList();
            o.LJIIIIZZ(effectList, "effectList");
            boolean z = false;
            if (!effectList.isEmpty()) {
                ArrayList arrayList = new ArrayList();
                Iterator<EffectPointModel> it = effectList.iterator();
                while (it.hasNext()) {
                    EffectPointModel next = it.next();
                    if (true ^ o.LJ(next.getCategory(), "time")) {
                        arrayList.add(next);
                    }
                }
                ArrayList arrayList2 = new ArrayList();
                Iterator it2 = arrayList.iterator();
                while (it2.hasNext()) {
                    Object next2 = it2.next();
                    String extra = ((EffectPointModel) next2).getExtra();
                    if (extra == null) {
                        extra = "";
                    }
                    if (!s.LJJJLZIJ(extra, EnumC133695Mn.EDIT_EFFECT_SERVER.getType(), false) && !s.LJJJLZIJ(extra, EnumC133695Mn.EDIT_EFFECT_CLIENT.getType(), false) && !s.LJJJLZIJ(extra, EnumC133695Mn.EDIT_EFFECT_COMBINED.getType(), false)) {
                        arrayList2.add(next2);
                    }
                }
                List<EffectPointModel> LLILII = ORZ.LLILII(new IDComparatorS30S0000000_2(39), arrayList2);
                z = false;
                for (EffectPointModel effectPointModel : LLILII) {
                    ArrayList arrayList3 = new ArrayList();
                    for (Object obj : LLILII) {
                        if (!o.LJ(((EffectPointModel) obj).getUuid(), effectPointModel.getUuid())) {
                            arrayList3.add(obj);
                        }
                    }
                    Iterator it3 = arrayList3.iterator();
                    while (true) {
                        if (it3.hasNext()) {
                            EffectPointModel effectPointModel2 = (EffectPointModel) it3.next();
                            if (effectPointModel2.getEndPoint() > effectPointModel.getStartPoint() && effectPointModel2.getStartPoint() < effectPointModel.getEndPoint()) {
                                z = true;
                                break;
                            }
                        }
                    }
                }
            }
            editEffectModel.forceEnterMultiTrack = z;
        }
        return videoPublishEditModel.getEditEffectModel().forceEnterMultiTrack;
    }

    public static final void LLIIIJ(VideoPublishEditModel videoPublishEditModel) {
        SoundEffectInfoModel soundEffectInfoModel = videoPublishEditModel.creativeModel.soundEffectInfoModel;
        boolean z = true;
        if (!(!soundEffectInfoModel.soundEffectList.isEmpty())) {
            z = e1.LIZ(31744, "studio_editor_pro_soundeffect", true, false);
        }
        soundEffectInfoModel.enableStatus = z;
    }

    public static final AlsLogicContainer LLIIJLIL(ActivityC45651qj activity) {
        o.LJIIIZ(activity, "activity");
        AlsVMContainer alsVMContainer = (AlsVMContainer) C09260Xy.LIZ(activity, AlsVMContainer.class);
        alsVMContainer.gv0(activity);
        if (alsVMContainer.LJLILLLLZI == null) {
            ApiCenter LIZ = C0I0.LIZ(activity);
            android.app.Fragment fragment = null;
            C82622Wbi hv0 = C78688UuS.LJIILLIIL(activity, null).hv0();
            FragmentManager fragmentManager = activity.getFragmentManager();
            android.app.Fragment findFragmentByTag = fragmentManager.findFragmentByTag("ALS.ActivityLifecycleFragment");
            if (findFragmentByTag instanceof FragmentC39261gQ) {
                fragment = findFragmentByTag;
            }
            FragmentC39261gQ fragmentC39261gQ = (FragmentC39261gQ) fragment;
            if (fragmentC39261gQ == null) {
                fragmentC39261gQ = new FragmentC39261gQ();
                fragmentManager.beginTransaction().add(fragmentC39261gQ, "ALS.ActivityLifecycleFragment").commitAllowingStateLoss();
                fragmentManager.executePendingTransactions();
            }
            LifecycleRegistry lifecycleRegistry = fragmentC39261gQ.LJLIL;
            String LJFF = C65352Pkq.LIZ(activity.getClass()).LJFF();
            if (LJFF == null) {
                LJFF = "";
            }
            alsVMContainer.LJLILLLLZI = new AlsLogicContainer(LJFF, lifecycleRegistry, LIZ, hv0, alsVMContainer.LJLIL, null);
        }
        AlsLogicContainer alsLogicContainer = alsVMContainer.LJLILLLLZI;
        o.LJI(alsLogicContainer);
        return alsLogicContainer;
    }

    public static final Context LLIILZL(InterfaceC41034G8o interfaceC41034G8o) {
        o.LJIIIZ(interfaceC41034G8o, "<this>");
        Context context = ((InterfaceC44391HbX) interfaceC41034G8o.L9()).getContext();
        if (context != null) {
            return context;
        }
        "Required value was null.".toString();
        throw new IllegalArgumentException("Required value was null.");
    }

    public static final boolean LLILII(VideoPublishEditModel videoPublishEditModel) {
        boolean z;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C79004UzY.LJJIIJ(videoPublishEditModel.canvasVideoData) || H7R.LJJLIIIJL(videoPublishEditModel) || videoPublishEditModel.isCurrentAutoCutMode() || C79004UzY.LJJIJL(videoPublishEditModel.canvasVideoData) || LLJILLL(videoPublishEditModel)) {
            return false;
        }
        if (videoPublishEditModel.isPhotoMvMode && C5VC.LIZ()) {
            z = true;
        } else {
            z = false;
        }
        if (!H7R.LJJJ(videoPublishEditModel) && !z && !LJIILJJIL(videoPublishEditModel)) {
            return false;
        }
        return true;
    }

    public static final BlendMode LLILIL(int i) {
        if (i == 0) {
            return BlendMode.CLEAR;
        }
        if (i == 1) {
            return BlendMode.SRC;
        }
        if (i == 2) {
            return BlendMode.DST;
        }
        if (i == 3) {
            return BlendMode.SRC_OVER;
        }
        if (i == 4) {
            return BlendMode.DST_OVER;
        }
        if (i == 5) {
            return BlendMode.SRC_IN;
        }
        if (i == 6) {
            return BlendMode.DST_IN;
        }
        if (i == 7) {
            return BlendMode.SRC_OUT;
        }
        if (i == 8) {
            return BlendMode.DST_OUT;
        }
        if (i == 9) {
            return BlendMode.SRC_ATOP;
        }
        if (i == 10) {
            return BlendMode.DST_ATOP;
        }
        if (i == 11) {
            return BlendMode.XOR;
        }
        if (i == 12) {
            return BlendMode.PLUS;
        }
        if (i == 13) {
            return BlendMode.MODULATE;
        }
        if (i == 14) {
            return BlendMode.SCREEN;
        }
        if (i == 15) {
            return BlendMode.OVERLAY;
        }
        if (i == 16) {
            return BlendMode.DARKEN;
        }
        if (i == 17) {
            return BlendMode.LIGHTEN;
        }
        if (i == 18) {
            return BlendMode.COLOR_DODGE;
        }
        if (i == 19) {
            return BlendMode.COLOR_BURN;
        }
        if (i == 20) {
            return BlendMode.HARD_LIGHT;
        }
        if (i == 21) {
            return BlendMode.SOFT_LIGHT;
        }
        if (i == 22) {
            return BlendMode.DIFFERENCE;
        }
        if (i == 23) {
            return BlendMode.EXCLUSION;
        }
        if (i == 24) {
            return BlendMode.MULTIPLY;
        }
        if (i == 25) {
            return BlendMode.HUE;
        }
        if (i == 26) {
            return BlendMode.SATURATION;
        }
        if (i == 27) {
            return BlendMode.COLOR;
        }
        if (i == 28) {
            return BlendMode.LUMINOSITY;
        }
        return BlendMode.SRC_OVER;
    }

    public static final String LLILLIZIL(InsertStory insertStory) {
        String toJsonArray = C75792yF.LIZJ(ORZ.LLJI(C47261Igj.LJJIJ(insertStory)));
        o.LJIIIIZZ(toJsonArray, "toJsonArray");
        return toJsonArray;
    }

    public static final EnumC240989d0 LLILLJJLI(int i) {
        if (i != 0) {
            if (i != 1) {
                if (i != 2) {
                    return EnumC240989d0.NOT_ALLOWED_SHOWN;
                }
                return EnumC240989d0.HAS_PINNED;
            }
            return EnumC240989d0.NOT_PINNED;
        }
        return EnumC240989d0.NOT_ALLOWED_SHOWN;
    }

    public static final List LLILLL(List list) {
        List<Aweme> nowPosts;
        ArrayList arrayList = new ArrayList();
        if (list != null) {
            Iterator it = list.iterator();
            while (it.hasNext()) {
                Aweme aweme = (Aweme) it.next();
                if (aweme != null && Z89.LIZIZ.LIZIZ(aweme)) {
                    arrayList.add(LLIZ(aweme, 0, false));
                    arrayList.add(LLILL(aweme, 0, 3));
                    UserNowPost userNowPost = aweme.userNowPost;
                    if (userNowPost != null && (nowPosts = userNowPost.getNowPosts()) != null) {
                        for (Aweme aweme2 : nowPosts) {
                            arrayList.add(LLIZ(aweme2, 0, false));
                            arrayList.add(LLILL(aweme2, 0, 3));
                        }
                    }
                }
            }
        }
        ArrayList arrayList2 = new ArrayList();
        Iterator it2 = arrayList.iterator();
        while (it2.hasNext()) {
            Object next = it2.next();
            C197057oL c197057oL = (C197057oL) next;
            if (c197057oL.LIZ != EnumC197067oM.INVALID && c197057oL.LIZIZ != null) {
                arrayList2.add(next);
            }
        }
        return arrayList2;
    }

    public static final PorterDuff.Mode LLILZ(int i) {
        if (i == 0) {
            return PorterDuff.Mode.CLEAR;
        }
        if (i == 1) {
            return PorterDuff.Mode.SRC;
        }
        if (i == 2) {
            return PorterDuff.Mode.DST;
        }
        if (i == 3) {
            return PorterDuff.Mode.SRC_OVER;
        }
        if (i == 4) {
            return PorterDuff.Mode.DST_OVER;
        }
        if (i == 5) {
            return PorterDuff.Mode.SRC_IN;
        }
        if (i == 6) {
            return PorterDuff.Mode.DST_IN;
        }
        if (i == 7) {
            return PorterDuff.Mode.SRC_OUT;
        }
        if (i == 8) {
            return PorterDuff.Mode.DST_OUT;
        }
        if (i == 9) {
            return PorterDuff.Mode.SRC_ATOP;
        }
        if (i == 10) {
            return PorterDuff.Mode.DST_ATOP;
        }
        if (i == 11) {
            return PorterDuff.Mode.XOR;
        }
        if (i == 12) {
            return PorterDuff.Mode.ADD;
        }
        if (i == 14) {
            return PorterDuff.Mode.SCREEN;
        }
        if (i == 15) {
            return PorterDuff.Mode.OVERLAY;
        }
        if (i == 16) {
            return PorterDuff.Mode.DARKEN;
        }
        if (i == 17) {
            return PorterDuff.Mode.LIGHTEN;
        }
        if (i == 13) {
            return PorterDuff.Mode.MULTIPLY;
        }
        return PorterDuff.Mode.SRC_OVER;
    }

    public static final void LLJ(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        long currentTimeMillis = System.currentTimeMillis();
        CreativeDurationExtra creativeDurationExtra = videoPublishEditModel.creativeFlowData.getCreativeDurationExtra();
        if ((videoPublishEditModel.mIsFromDraft || videoPublishEditModel.draftFromShoot) && creativeDurationExtra.getStartEditDraftTime() != 0) {
            creativeDurationExtra.setShootPublishDuration((currentTimeMillis - creativeDurationExtra.getStartEditDraftTime()) + creativeDurationExtra.getShootPublishDuration());
            creativeDurationExtra.setStartEditDraftTime(currentTimeMillis);
        } else {
            if (creativeDurationExtra.getStartTime() <= 0) {
                return;
            }
            creativeDurationExtra.setShootPublishDuration(currentTimeMillis - creativeDurationExtra.getStartTime());
        }
    }

    public static final boolean LLJI(VideoPublishEditModel videoPublishEditModel) {
        List<String> sourceInfo;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.getOriginal() != 0) {
            return false;
        }
        if (videoPublishEditModel.isPhotoMvMode) {
            if (videoPublishEditModel.mvCreateVideoData.sourceItemList.size() != 1) {
                return false;
            }
            return true;
        }
        if (H7R.LJJIL(videoPublishEditModel)) {
            CanvasVideoData canvasVideoData = videoPublishEditModel.canvasVideoData;
            if (canvasVideoData == null || (sourceInfo = canvasVideoData.getSourceInfo()) == null || sourceInfo.size() != 1) {
                return false;
            }
            return true;
        }
        if (H7R.LJJJJL(videoPublishEditModel)) {
            if (videoPublishEditModel.getImageAlbumData().getImageList().size() != 1) {
                return false;
            }
            return true;
        }
        if (videoPublishEditModel.getPreviewInfo().getVideoList().size() != 1) {
            return false;
        }
        return true;
    }

    public static final String LLJIJIL(UrlModel urlModel) {
        if (urlModel != null) {
            StringBuilder LIZ = X1D.LIZ();
            LIZ.append("UrlModel: ");
            LIZ.append(urlModel.getUrlList());
            return X1D.LIZIZ(LIZ);
        }
        return "";
    }

    public static final boolean LLJILJIL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (LLIFFJFJJ(videoPublishEditModel) == 2 || LLIFFJFJJ(videoPublishEditModel) == 3) {
            return true;
        }
        return false;
    }

    public static final boolean LLJILJILJ(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (LLIFFJFJJ(videoPublishEditModel) == 3) {
            return true;
        }
        return false;
    }

    public static final boolean LLJILLL(VideoPublishEditModel videoPublishEditModel) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if ((videoPublishEditModel.mShootMode == 20 || (o.LJ(videoPublishEditModel.mShootWay, "story") && videoPublishEditModel.creativeModel.commonMobModel.isUploadDirectEnter && C44252HYi.LIZ())) && !H7R.LJJLIIIJJIZ(videoPublishEditModel)) {
            return true;
        }
        return false;
    }

    @Override // X.InterfaceC48038ItG
    public Object apply(Object obj) {
        return ((IEffectService) CN1.LIZ(IEffectService.class)).convertStickerBean((Effect) obj);
    }

    @Override // X.InterfaceC67677QhF
    public void onSuccess(Object obj) {
        C67550QfC.LIZIZ = true;
        C67550QfC.LIZ = true;
        C67550QfC.LIZJ = false;
        R5Q.LIZ(false, false);
    }

    public static final C44421Hc1 LIZLLL(C44421Hc1 c44421Hc1, VideoUrlModel videoUrlModel) {
        if (videoUrlModel == null) {
            return c44421Hc1;
        }
        boolean isBytevc1 = videoUrlModel.isBytevc1();
        c44421Hc1.getClass();
        C44398Hbe c44398Hbe = new C44398Hbe(c44421Hc1);
        c44398Hbe.LIZIZ = videoUrlModel.getUrlKey();
        c44398Hbe.LIZJ = isBytevc1 ? 1 : 0;
        c44398Hbe.LIZLLL = videoUrlModel.getUrlList();
        c44398Hbe.LJ = videoUrlModel.getSize();
        C44421Hc1 LIZ = c44398Hbe.LIZ();
        o.LJIIIIZZ(LIZ, "createPlayItem()\n       …)\n        .addToBuilder()");
        return LIZ;
    }

    public static final C145995oB LJ(VideoPublishEditModel model, C145995oB c145995oB) {
        int i;
        o.LJIIIZ(model, "model");
        if (!model.isCurrentAutoCutMode()) {
            return c145995oB;
        }
        AutoCutModel autoCutModel = model.creativeModel.autoCutModel;
        c145995oB.LJI("autocut_style_name", C45087Hml.LJIIIZ(autoCutModel.curIndexFromSource, AnonymousClass636.LJJ(autoCutModel.curSource), autoCutModel));
        if (C45087Hml.LJIIL(autoCutModel, null) == 0) {
            i = 1;
        } else {
            i = 0;
        }
        c145995oB.LIZ(i, "is_recommend_style");
        c145995oB.LIZ(autoCutModel.curTemplateType, "autocut_template_type");
        c145995oB.LJI("autocut_template_id", autoCutModel.curTemplateId);
        c145995oB.LJI("autocut_template_group_id", autoCutModel.curTemplateGroupId);
        c145995oB.LJI("autocut_reuse_music_type", C45087Hml.LJIL(autoCutModel, null, null));
        c145995oB.LJI("autocut_task_id", autoCutModel.taskId);
        C77117UOj.LJII(c145995oB, autoCutModel.curRecommendTitleList, "enter_video_edit_page");
        C77117UOj.LJIIIIZZ(c145995oB, autoCutModel.speedVariationType);
        return c145995oB;
    }

    public static final void LJFF(VideoPublishEditModel model, C145995oB c145995oB) {
        o.LJIIIZ(c145995oB, "<this>");
        o.LJIIIZ(model, "model");
        LJI(model, c145995oB);
        String str = model.mSelectedFilterId;
        Object obj = "";
        if (str == null) {
            str = "";
        }
        c145995oB.LJI("edit_filter_id", str);
        String str2 = model.mSelectedFilterLabel;
        if (str2 == null) {
            str2 = "";
        }
        c145995oB.LJI("edit_filter_name", str2);
        float f = model.mSelectedFilterIntensity;
        if (f >= 0.0f) {
            obj = Float.valueOf(f);
        }
        c145995oB.LIZJ(obj, "edit_filter_value");
    }

    public static final void LJI(VideoPublishEditModel model, C145995oB c145995oB) {
        o.LJIIIZ(c145995oB, "<this>");
        o.LJIIIZ(model, "model");
        c145995oB.LJI("shoot_filter_id_list", model.mRecordFilterIds);
        c145995oB.LJI("shoot_filter_name_list", model.mRecordFilterLabels);
        c145995oB.LJI("shoot_filter_value_list", model.mRecordFilterValues);
    }

    public static final void LJII(ActivityC45651qj attach, InterfaceC88472Yns interfaceC88472Yns) {
        o.LJIIIZ(attach, "$this$attach");
        C275416g c275416g = new C275416g(LLIIJLIL(attach));
        interfaceC88472Yns.invoke(c275416g);
        c275416g.LIZIZ();
    }

    public static final void LJIIIIZZ(AbstractC40841iy attach, InterfaceC88472Yns init) {
        o.LJIIIZ(attach, "$this$attach");
        o.LJIIIZ(init, "init");
        C275416g c275416g = new C275416g(LLIIL(attach, null));
        init.invoke(c275416g);
        c275416g.LIZIZ();
    }

    public static final void LJIIIZ(WMH attach, InterfaceC88472Yns interfaceC88472Yns) {
        o.LJIIIZ(attach, "$this$attach");
        C275416g c275416g = new C275416g(LLIILII(attach, null));
        interfaceC88472Yns.invoke(c275416g);
        c275416g.LIZIZ();
    }

    public static AbstractC79424VFc LJIL(int i, int i2) {
        switch (i2) {
            case 1:
                return new VFX(i);
            case 2:
                return new C79431VFj(i);
            case 3:
                return new C79428VFg(i);
            case 4:
                return new C79429VFh(i);
            case 5:
                return new VFY(i);
            case 6:
            case ABRConfig.ABR_BANDWIDTH_PARAMETER_KEY /* 11 */:
            case ABRConfig.ABR_STARTUP_MAX_BITRATE /* 13 */:
            default:
                return null;
            case 7:
                return new C79433VFl(i, 7);
            case 8:
                return new C79435VFn(i);
            case 9:
                return new C79430VFi(i);
            case 10:
                return new C79427VFf(i);
            case 12:
                return new C79434VFm(i);
            case 14:
                return new VFW(i);
            case 15:
                return new C79425VFd(i);
        }
    }

    public static final boolean LJJI(Bundle bundle, VideoPublishEditModel videoPublishEditModel) {
        String string;
        EditEffectAnchorManager data;
        if (bundle == null || (string = bundle.getString("extra_edit_effect_uid")) == null || (data = EffectAnchorServiceImpl.createIEffectAnchorServicebyMonsterPlugin(false).getData(string)) == null) {
            return false;
        }
        return data.hasOverlayEffects();
    }

    public static final OSZ LJJJJZI(VideoPublishEditModel videoPublishEditModel, boolean z) {
        String str;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (videoPublishEditModel.isCurrentAutoCutMode()) {
            videoPublishEditModel.generateVideoCoverPath();
            String videoCoverPath = videoPublishEditModel.getVideoCoverPath();
            if (videoCoverPath == null) {
                videoCoverPath = "";
            }
            return new OSZ(videoCoverPath, Integer.valueOf((int) (videoPublishEditModel.mVideoCoverStartTm * 1000)));
        }
        if (H7R.LJJJJL(videoPublishEditModel)) {
            if (H7R.LJJIJLIJ(videoPublishEditModel)) {
                videoPublishEditModel.generateVideoCoverPath();
                String videoCoverPath2 = videoPublishEditModel.getVideoCoverPath();
                if (videoCoverPath2 != null) {
                    return new OSZ(videoCoverPath2, 0);
                }
            }
        } else {
            if (videoPublishEditModel.isMvThemeVideoType()) {
                MvCreateVideoData mvCreateVideoData = videoPublishEditModel.mvCreateVideoData;
                if (mvCreateVideoData != null && TextUtils.isEmpty(mvCreateVideoData.videoCoverImgPath)) {
                    MvCreateVideoData mvCreateVideoData2 = videoPublishEditModel.mvCreateVideoData;
                    HHF LIZ = C78934UyQ.LJLIL.LJI().LIZ();
                    CreativeInfo creativeInfo = videoPublishEditModel.creativeInfo;
                    o.LJIIIIZZ(creativeInfo, "creativeInfo");
                    mvCreateVideoData2.videoCoverImgPath = LIZ.LJII(creativeInfo);
                    String str2 = videoPublishEditModel.mvCreateVideoData.videoCoverImgPath;
                    if (C142985jK.LIZ()) {
                        videoPublishEditModel.setVideoCoverPath(str2);
                    }
                }
                MvCreateVideoData mvCreateVideoData3 = videoPublishEditModel.mvCreateVideoData;
                return new OSZ(mvCreateVideoData3.videoCoverImgPath, Integer.valueOf(mvCreateVideoData3.videoCoverStartTime));
            }
            if (videoPublishEditModel.isMultiVideoEdit()) {
                if (C142975jJ.LIZ() || C142985jK.LIZ() || videoPublishEditModel.creativeModel.draftInfoModel.fromDraftPopup || H7R.LJJJJLI(videoPublishEditModel) || videoPublishEditModel.getOriginal() == 2 || videoPublishEditModel.getEditorProModel().isAdvancedEditDraft() || videoPublishEditModel.isSoundSyncFromAnchor() || H7R.LJJLIIIJL(videoPublishEditModel) || H7R.LJJJIL(videoPublishEditModel) || videoPublishEditModel.getEditorProModel().getFromEditorProAnchor()) {
                    MultiEditVideoStatusRecordData multiEditVideoStatusRecordData = videoPublishEditModel.multiEditVideoRecordData;
                    if (multiEditVideoStatusRecordData != null && ((str = multiEditVideoStatusRecordData.coverImagePath) == null || str.length() == 0)) {
                        CreativeInfo creativeInfo2 = videoPublishEditModel.creativeInfo;
                        o.LJIIIIZZ(creativeInfo2, "creativeInfo");
                        String LIZJ = C6BI.LIZJ(creativeInfo2);
                        multiEditVideoStatusRecordData.coverImagePath = LIZJ;
                        if (C142985jK.LIZ()) {
                            videoPublishEditModel.setVideoCoverPath(LIZJ);
                        }
                    }
                    MultiEditVideoStatusRecordData multiEditVideoStatusRecordData2 = videoPublishEditModel.multiEditVideoRecordData;
                    long j = multiEditVideoStatusRecordData2.curMultiEditVideoRecordData.endTime;
                    float f = 1000;
                    if (((int) j) < ((int) (videoPublishEditModel.mVideoCoverStartTm * f))) {
                        videoPublishEditModel.mVideoCoverStartTm = ((float) j) / 1000.0f;
                    }
                    return new OSZ(multiEditVideoStatusRecordData2.coverImagePath, Integer.valueOf((int) (videoPublishEditModel.mVideoCoverStartTm * f)));
                }
            } else {
                if (H7R.LJJIL(videoPublishEditModel) && !H7R.LJJLI(videoPublishEditModel)) {
                    videoPublishEditModel.generateVideoCoverPath();
                    String videoCoverPath3 = videoPublishEditModel.getVideoCoverPath();
                    o.LJI(videoCoverPath3);
                    return new OSZ(videoCoverPath3, Integer.valueOf((int) (videoPublishEditModel.mVideoCoverStartTm * 1000)));
                }
                if (videoPublishEditModel.isCutSameVideoType()) {
                    videoPublishEditModel.generateVideoCoverPath();
                    String videoCoverPath4 = videoPublishEditModel.getVideoCoverPath();
                    if (videoCoverPath4 != null) {
                        return new OSZ(videoCoverPath4, Integer.valueOf((int) (videoPublishEditModel.mVideoCoverStartTm * 1000)));
                    }
                } else {
                    C60903NvH.LJIIJJI().getPublishService().LJFF().getClass();
                    boolean z2 = !videoPublishEditModel.mIsFromDraft;
                    if ((C142975jJ.LIZ() || z2 || C142985jK.LIZ()) && !z) {
                        videoPublishEditModel.generateVideoCoverPath();
                        String videoCoverPath5 = videoPublishEditModel.getVideoCoverPath();
                        o.LJI(videoCoverPath5);
                        return new OSZ(videoCoverPath5, Integer.valueOf((int) (videoPublishEditModel.mVideoCoverStartTm * 1000)));
                    }
                }
            }
        }
        return null;
    }

    public static final int LJJLJ(int i, int i2) {
        if (ToolBarButtonWithTextExperiment.hasText()) {
            return i;
        }
        return i2;
    }

    public static final EnumC139385dW LJL(VideoPublishEditModel videoPublishEditModel, Integer num) {
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (C78685UuP.LJJJZ(videoPublishEditModel.creativeModel.initialModel.highLightVideoParametersModel.stickerText) && !videoPublishEditModel.creativeModel.draftInfoModel.isDraft) {
            return EnumC139385dW.LIVE_HIGHLIGHT;
        }
        if (!videoPublishEditModel.isCommentReply() && !videoPublishEditModel.mIsFromDraft) {
            String newDraftId = videoPublishEditModel.newDraftId;
            o.LJIIIIZZ(newDraftId, "newDraftId");
            if (newDraftId.length() == 0 && !videoPublishEditModel.isRetakeVideo() && !o.LJ("effect_qr_scan", videoPublishEditModel.enterFrom) && !H7R.LJJJJL(videoPublishEditModel) && videoPublishEditModel.getTtsVoiceModel() != null && !TextUtils.isEmpty(videoPublishEditModel.getTtsVoiceModel().getEffectId()) && !videoPublishEditModel.isAutoAddTTSSticker()) {
                videoPublishEditModel.autoAddTTSStickerOnce();
                return EnumC139385dW.TTS_VOICE;
            }
        }
        if (!videoPublishEditModel.isCommentReply() && !LJLLLLLL(videoPublishEditModel) && !videoPublishEditModel.mIsFromDraft) {
            String newDraftId2 = videoPublishEditModel.newDraftId;
            o.LJIIIIZZ(newDraftId2, "newDraftId");
            if (newDraftId2.length() == 0 && !videoPublishEditModel.isRetakeVideo() && !H7R.LJIIL(videoPublishEditModel) && !o.LJ("effect_qr_scan", videoPublishEditModel.enterFrom) && !C79004UzY.LJJIIJ(videoPublishEditModel.canvasVideoData) && num != null && num.intValue() > 60000) {
                return EnumC139385dW.LONG_VIDEO;
            }
        }
        return EnumC139385dW.NONE;
    }

    public static final boolean LJLZ(ServiceInfo serviceInfo, ServiceInfo other) {
        o.LJIIIZ(other, "other");
        return o.LJ(serviceInfo.castId, other.castId);
    }

    public static String LLIIII(Object obj, int i) {
        boolean z;
        boolean z2;
        String str;
        String LLIIII;
        if ((i & 2) != 0) {
            z = true;
        } else {
            z = false;
        }
        if ((i & 4) != 0) {
            z2 = true;
        } else {
            z2 = false;
        }
        o.LJIIIZ(obj, "obj");
        ArrayList arrayList = new ArrayList();
        for (Class<?> cls = obj.getClass(); cls != null && !o.LJ(cls.getClassLoader(), String.class.getClassLoader()); cls = cls.getSuperclass()) {
            Field[] declaredFields = cls.getDeclaredFields();
            o.LJIIIIZZ(declaredFields, "clazz.declaredFields");
            ArrayList arrayList2 = new ArrayList();
            for (Field field : declaredFields) {
                if ((!z || !Modifier.isStatic(field.getModifiers())) && (!z2 || !Modifier.isTransient(field.getModifiers()))) {
                    arrayList2.add(field);
                }
            }
            Iterator it = arrayList2.iterator();
            while (it.hasNext()) {
                Field field2 = (Field) it.next();
                field2.setAccessible(true);
                StringBuilder sb = new StringBuilder();
                sb.append(field2.getName());
                sb.append('=');
                Object obj2 = field2.get(obj);
                if (obj2 != null) {
                    if (o.LJ(field2.getClass().getClassLoader(), String.class.getClassLoader())) {
                        LLIIII = obj2.toString();
                    } else {
                        LLIIII = LLIIII(obj2, 6);
                    }
                    if (LLIIII != null) {
                        str = s.LJZI(LLIIII).toString();
                        sb.append(str);
                        arrayList.add(sb.toString());
                    }
                }
                str = null;
                sb.append(str);
                arrayList.add(sb.toString());
            }
        }
        StringBuilder LIZ = X1D.LIZ();
        LIZ.append(C16880lQ.LJLLJ(obj.getClass()));
        LIZ.append("=[");
        return q.LIZIZ(LIZ, ORZ.LLD(arrayList, ", ", null, null, null, 62), ']', LIZ);
    }

    public static final void LLIIIZ(InterfaceC44447HcR removeStickerDataFilter, EO7 filter) {
        o.LJIIIZ(removeStickerDataFilter, "$this$removeStickerDataFilter");
        o.LJIIIZ(filter, "filter");
        C37143Ehv LIZIZ = removeStickerDataFilter.LIZIZ();
        LIZIZ.LIZJ(filter);
        LIZIZ.LIZIZ();
    }

    public static final android.net.Uri LLIIJI(android.net.Uri uri, String key) {
        o.LJIIIZ(key, "key");
        java.util.Set<String> queryParameterNames = UriProtector.getQueryParameterNames(uri);
        o.LJIIIIZZ(queryParameterNames, "this.queryParameterNames");
        Uri.Builder clearQuery = uri.buildUpon().clearQuery();
        o.LJIIIIZZ(clearQuery, "this.buildUpon().clearQuery()");
        for (String str : queryParameterNames) {
            if (!o.LJ(str, key)) {
                clearQuery.appendQueryParameter(str, UriProtector.getQueryParameter(uri, str));
            }
        }
        android.net.Uri build = clearQuery.build();
        o.LJIIIIZZ(build, "newUri.build()");
        return build;
    }

    public static final AlsLogicContainer LLIIL(AbstractC40841iy component, StackTraceElement[] stackTraceElementArr) {
        o.LJIIIZ(component, "component");
        ViewModel viewModel = C0I9.LIZ(component).get(AlsVMContainer.class);
        o.LJIIIIZZ(viewModel, "ComponentViewModelProvid…sVMContainer::class.java]");
        AlsVMContainer alsVMContainer = (AlsVMContainer) viewModel;
        if (alsVMContainer.LJLILLLLZI == null) {
            Object LJ = component.LJLILLLLZI.LJ(Activity.class, null);
            if (!(LJ instanceof ActivityC45651qj)) {
                LJ = null;
            }
            ActivityC45651qj activityC45651qj = (ActivityC45651qj) LJ;
            if (activityC45651qj != null) {
                ApiCenter LIZ = C0I0.LIZ(activityC45651qj);
                C82622Wbi hv0 = C78688UuS.LJIIZILJ(component, null).hv0();
                String LJFF = C65352Pkq.LIZ(component.getClass()).LJFF();
                if (LJFF == null) {
                    LJFF = "";
                }
                alsVMContainer.LJLILLLLZI = new AlsLogicContainer(LJFF, component.getLifecycle(), LIZ, hv0, alsVMContainer.LJLIL, stackTraceElementArr);
            } else {
                throw new IllegalStateException("a fragmentActivity instance is required in component.");
            }
        }
        AlsLogicContainer alsLogicContainer = alsVMContainer.LJLILLLLZI;
        o.LJI(alsLogicContainer);
        return alsLogicContainer;
    }

    public static final AlsLogicContainer LLIILII(WMH scene, StackTraceElement[] stackTraceElementArr) {
        o.LJIIIZ(scene, "scene");
        ViewModel viewModel = C165716et.LIZ(scene).get(AlsVMContainer.class);
        o.LJIIIIZZ(viewModel, "SceneViewModelProviders.…sVMContainer::class.java]");
        AlsVMContainer alsVMContainer = (AlsVMContainer) viewModel;
        if (alsVMContainer.LJLILLLLZI == null) {
            Activity requireActivity = scene.requireActivity();
            if (requireActivity != null) {
                ApiCenter LIZ = C0I0.LIZ((ActivityC45651qj) requireActivity);
                C82622Wbi hv0 = C78688UuS.LJIJ(scene, false, null, 14).hv0();
                String LJFF = C65352Pkq.LIZ(scene.getClass()).LJFF();
                if (LJFF == null) {
                    LJFF = "";
                }
                Lifecycle lifecycle = scene.getLifecycle();
                o.LJIIIIZZ(lifecycle, "scene.lifecycle");
                alsVMContainer.LJLILLLLZI = new AlsLogicContainer(LJFF, lifecycle, LIZ, hv0, alsVMContainer.LJLIL, stackTraceElementArr);
            } else {
                throw new NullPointerException("null cannot be cast to non-null type androidx.fragment.app.FragmentActivity");
            }
        }
        AlsLogicContainer alsLogicContainer = alsVMContainer.LJLILLLLZI;
        o.LJI(alsLogicContainer);
        return alsLogicContainer;
    }

    public static final C25848ACm LLIIZ(C25848ACm c25848ACm, boolean z) {
        o.LJIIIZ(c25848ACm, "<this>");
        return C25848ACm.LJIILJJIL(c25848ACm, z, null, null, false, null, null, null, false, false, false, 65534);
    }

    public static final boolean LLIL(IX7 cachedSession, IX4 playData) {
        o.LJIIIZ(playData, "playData");
        o.LJIIIZ(cachedSession, "cachedSession");
        if (cachedSession.LJIIJJI != playData.LJIILIIL) {
            return false;
        }
        if (playData.LJJJLIIL == cachedSession.LJIILIIL && playData.LJJJLL == cachedSession.LJIILJJIL) {
            return true;
        }
        Object value = IZ8.LLLLZI.getValue();
        o.LJIIIIZZ(value, "<get-ENGINE_REUSE_RESTRICT_VIDEO_WIDTH_DIFF>(...)");
        int intValue = ((Number) value).intValue();
        Object value2 = IZ8.LLLLZIL.getValue();
        o.LJIIIIZZ(value2, "<get-ENGINE_REUSE_RESTRICT_VIDEO_HEIGHT_DIFF>(...)");
        int intValue2 = ((Number) value2).intValue();
        if (Math.abs(playData.LJJJLIIL - cachedSession.LJIILIIL) < intValue || Math.abs(playData.LJJJLL - cachedSession.LJIILJJIL) < intValue2) {
            return false;
        }
        return true;
    }

    public static final int LLJJ(float f, int i) {
        return (C78842Uww.LJIIL((int) (f * 255), 0, 255) << 24) | (i & 16777215);
    }

    @Override // X.RTU
    public Object apply(Object obj, Object obj2) {
        return obj;
    }

    /* JADX WARN: Multi-variable type inference failed */
    public static final void LIZJ(C29321Dc c29321Dc, C25710zf c25710zf, InterfaceC88472Yns interfaceC88472Yns) {
        C25710zf<C29321Dc> LJJ = c29321Dc.LJJ();
        int i = LJJ.LJLJI;
        if (i > 0) {
            C29321Dc[] c29321DcArr = LJJ.LJLIL;
            o.LJII(c29321DcArr, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");
            int i2 = 0;
            do {
                C29321Dc c29321Dc2 = c29321DcArr[i2];
                if (c25710zf.LJLJI <= i2) {
                    c25710zf.LIZLLL(interfaceC88472Yns.invoke(c29321Dc2));
                } else {
                    c25710zf.LJLIL[i2] = interfaceC88472Yns.invoke(c29321Dc2);
                }
                i2++;
            } while (i2 < i);
        }
        c25710zf.LJIILLIIL(c29321Dc.LJIJI().size(), c25710zf.LJLJI);
    }

    public static final boolean LJIIL(int i, VideoPublishEditModel videoPublishEditModel, String str) {
        int LIZ;
        o.LJIIIZ(videoPublishEditModel, "<this>");
        if (TextUtils.isEmpty(str) || videoPublishEditModel.isDuet() || videoPublishEditModel.isStickPointMode || (LIZ = HOH.LIZ(i, str)) <= 0) {
            return false;
        }
        if (C1DG.LJIIIIZZ() && videoPublishEditModel.getVideoLength() >= LIZ) {
            return false;
        }
        return true;
    }

    public static final long LJIJI(long j, K74 sourceUnit, K74 targetUnit) {
        o.LJIIIZ(sourceUnit, "sourceUnit");
        o.LJIIIZ(targetUnit, "targetUnit");
        return targetUnit.getTimeUnit$kotlin_stdlib().convert(j, sourceUnit.getTimeUnit$kotlin_stdlib());
    }

    public static void LJJ(String str, String str2, Throwable th) {
        if (LJLJLJ != null) {
            if (th == null) {
                C36922EeM.LIZLLL(2, str, str2);
                return;
            }
            StringBuilder LIZJ = b1.LIZJ(str2, " erMsg:");
            LIZJ.append(th.getMessage());
            C36922EeM.LIZLLL(2, str, X1D.LIZIZ(LIZJ));
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:10:0x0050, code lost:
    
        if (r1 == X.C24500xi.LIZIZ) goto L12;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static final X.C63099Opb LLIIIL(float r4, X.InterfaceC24520xk r5, int r6) {
        /*
            r0 = 1243703285(0x4a2167f5, float:2644477.2)
            r5.LJJIIJ(r0)
            r0 = r6 & 1
            if (r0 == 0) goto Lc
            r0 = 0
            float r4 = (float) r0
        Lc:
            r0 = -880162150(0xffffffffcb89ca9a, float:-1.8060596E7)
            r5.LJJIIJ(r0)
            X.V68 r0 = X.C79212V6y.LIZ(r5)
            boolean r0 = r0.LJIILJJIL()
            if (r0 == 0) goto L63
            r0 = 437655587(0x1a161823, float:3.103877E-23)
        L1f:
            long r1 = X.C78897Uxp.LIZLLL(r0)
            r5.LJJIJIIJIL()
            X.0dJ r0 = new X.0dJ
            r0.<init>(r1)
            X.1ar r3 = X.C78966Uyw.LJJJJIZL(r0, r5)
            X.0vv r2 = new X.0vv
            r2.<init>(r4)
            r0 = 511388516(0x1e7b2b64, float:1.3296802E-20)
            r5.LJJIIJ(r0)
            boolean r1 = r5.LJIJJ(r3)
            boolean r0 = r5.LJIJJ(r2)
            r0 = r0 | r1
            java.lang.Object r1 = r5.LJIILL()
            if (r0 != 0) goto L52
            X.0xi r0 = X.InterfaceC24520xk.LIZ
            r0.getClass()
            X.0xh r0 = X.C24500xi.LIZIZ
            if (r1 != r0) goto L5a
        L52:
            X.Opb r1 = new X.Opb
            r1.<init>(r3, r4)
            r5.LJJIII(r1)
        L5a:
            r5.LJJIJIIJIL()
            X.Opb r1 = (X.C63099Opb) r1
            r5.LJJIJIIJIL()
            return r1
        L63:
            r0 = 436207616(0x1a000000, float:2.646978E-23)
            goto L1f
        */
        throw new UnsupportedOperationException("Method not decompiled: X.C44384HbQ.LLIIIL(float, X.0xk, int):X.Opb");
    }

    /* JADX WARN: Multi-variable type inference failed */
    public static C197057oL LLILL(Aweme aweme, int i, int i2) {
        boolean z;
        boolean z2;
        Music backgroundMusic;
        List<String> list;
        boolean z3 = false;
        if ((i2 & 2) != 0) {
            i = 0;
        }
        o.LJIIIZ(aweme, "<this>");
        NowPostInfo nowPostInfo = aweme.nowPostInfo;
        Music music = null;
        Object[] objArr = 0;
        Object[] objArr2 = 0;
        if (nowPostInfo == null || nowPostInfo.getBackgroundMusic() == null) {
            return new C197057oL((EnumC197067oM) (objArr2 == true ? 1 : 0), (C44418Hby) (objArr == true ? 1 : 0), 7);
        }
        boolean LJJIIZ = C78565UsT.LJJIIZ(aweme);
        C44421Hc1 c44421Hc1 = new C44421Hc1();
        c44421Hc1.LIZIZ = LJIIJ(aweme);
        NowPostInfo nowPostInfo2 = aweme.nowPostInfo;
        if (nowPostInfo2 != null && (backgroundMusic = nowPostInfo2.getBackgroundMusic()) != null) {
            C44398Hbe c44398Hbe = new C44398Hbe(c44421Hc1);
            c44398Hbe.LIZIZ = String.valueOf(backgroundMusic.getId());
            UrlModel playUrl = backgroundMusic.getPlayUrl();
            if (playUrl != null) {
                list = playUrl.getUrlList();
            } else {
                list = null;
            }
            c44398Hbe.LIZLLL = list;
            c44421Hc1 = c44398Hbe.LIZ();
            o.LJIIIIZZ(c44421Hc1, "createPlayItem()\n       …)\n        .addToBuilder()");
        }
        NowPostInfo nowPostInfo3 = aweme.nowPostInfo;
        if (nowPostInfo3 != null) {
            music = nowPostInfo3.getBackgroundMusic();
        }
        if (!LJJIIZ) {
            z = false;
        } else {
            z = true;
        }
        C44412Hbs LIZ = c44421Hc1.LIZ();
        C46812IYu c46812IYu = LIZ.LIZIZ;
        c46812IYu.LJIIIIZZ = z;
        c46812IYu.LJ = i;
        if (music != null) {
            z2 = music.isNeedSetCookie();
        } else {
            z2 = false;
        }
        C46812IYu c46812IYu2 = LIZ.LIZIZ;
        c46812IYu2.LJFF = z2;
        if (EnumC122394rD.AUDIO == EnumC122394rD.VIDEO) {
            z3 = true;
        }
        c46812IYu2.LIZLLL = z3;
        c46812IYu2.LIZJ = true;
        C44421Hc1 c44421Hc12 = LIZ.LIZ;
        c44421Hc12.LJ = LIZ;
        return new C197057oL(EnumC197067oM.AUDIO, new C44388HbU(c44421Hc12).LIZ(), new C196947oA(LJJIIZ));
    }

    /* JADX WARN: Multi-variable type inference failed */
    public static final C197057oL LLIZ(Aweme aweme, int i, boolean z) {
        boolean z2;
        long j;
        int i2;
        o.LJIIIZ(aweme, "<this>");
        if (aweme.getVideo() == null) {
            return new C197057oL((EnumC197067oM) null, (C44418Hby) (0 == true ? 1 : 0), 7);
        }
        boolean LJJIIZ = C78565UsT.LJJIIZ(aweme);
        C44421Hc1 c44421Hc1 = new C44421Hc1();
        String aid = aweme.getAid();
        if (aid == null) {
            aid = "";
        }
        c44421Hc1.LIZIZ = aid;
        C44421Hc1 LIZLLL = LIZLLL(LIZLLL(c44421Hc1, aweme.getVideo().getPlayAddrH264()), aweme.getVideo().getPlayAddrBytevc1());
        List<BitRate> bitRate = aweme.getVideo().getBitRate();
        boolean z3 = false;
        if (bitRate != null && !bitRate.isEmpty()) {
            for (BitRate bitRate2 : bitRate) {
                UrlModel playAddr = bitRate2.getPlayAddr();
                if (playAddr != null) {
                    if (bitRate2.isBytevc1() == 1) {
                        i2 = 1;
                    } else {
                        i2 = 0;
                    }
                    LIZLLL.getClass();
                    C44398Hbe c44398Hbe = new C44398Hbe(LIZLLL);
                    c44398Hbe.LIZIZ = playAddr.getUrlKey();
                    c44398Hbe.LJ = playAddr.getSize();
                    c44398Hbe.LIZJ = i2;
                    C44386HbS c44386HbS = new C44386HbS(c44398Hbe);
                    c44386HbS.LIZ = bitRate2.getBitRate();
                    c44386HbS.LIZJ = bitRate2.getQualityType();
                    c44386HbS.LIZIZ = bitRate2.getGearName();
                    c44398Hbe.LJFF = c44386HbS;
                    c44398Hbe.LIZ();
                }
            }
        }
        Video video = aweme.getVideo();
        if (video != null) {
            LIZLLL.getClass();
            C44390HbW c44390HbW = new C44390HbW(LIZLLL);
            c44390HbW.LIZ = video.getVideoModelStr();
            LIZLLL.LIZLLL = c44390HbW;
        }
        Video video2 = aweme.getVideo();
        if (LJJIIZ || z) {
            z2 = true;
        } else {
            z2 = false;
        }
        C44412Hbs LIZ = LIZLLL.LIZ();
        C46812IYu c46812IYu = LIZ.LIZIZ;
        c46812IYu.LJII = true;
        c46812IYu.LJIIIIZZ = z2;
        c46812IYu.LIZIZ = true;
        c46812IYu.LJ = i;
        if (video2 != null) {
            z3 = video2.isNeedSetCookie();
        }
        LIZ.LIZIZ.LJFF = z3;
        if (video2 != null) {
            j = video2.getDuration();
        } else {
            j = 0;
        }
        LIZ.LIZJ = j;
        C44421Hc1 c44421Hc12 = LIZ.LIZ;
        c44421Hc12.LJ = LIZ;
        return new C197057oL(EnumC197067oM.VIDEO, new C44388HbU(c44421Hc12).LIZ(), new C196947oA(LJJIIZ));
    }

    @Override // X.C68D
    public C6DA LIZ(View contentView, C1552567l c1552567l, C82622Wbi c82622Wbi) {
        o.LJIIIZ(contentView, "contentView");
        return new C6DB(contentView, c1552567l);
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r11v0, types: [java.util.ArrayList] */
    /* JADX WARN: Type inference failed for: r11v1, types: [java.util.List] */
    /* JADX WARN: Type inference failed for: r11v2, types: [java.util.ArrayList] */
    /* JADX WARN: Type inference failed for: r11v3, types: [java.util.List] */
    public static final C69696RWy LLIZLLLIL(ProductPackStruct productPackStruct, List list, Boolean bool, int i) {
        com.ss.android.ugc.aweme.ecommerce.base.common.model.Video video;
        int i2;
        MediaItem mediaItem;
        String str;
        ArrayList arrayList;
        List<com.ss.android.ugc.aweme.ecommerce.base.sku.model.dto.Skc> list2;
        com.ss.android.ugc.aweme.ecommerce.base.sku.model.dto.Skc skc;
        List<Image> list3;
        List list4 = list;
        o.LJIIIZ(productPackStruct, "<this>");
        ?? arrayList2 = new ArrayList();
        ArrayList arrayList3 = new ArrayList();
        ProductBase productBase = productPackStruct.baseInfo;
        DynamicSellingPointsBase dynamicSellingPointsBase = null;
        if (productBase == null || (video = productBase.video) == null) {
            List<com.ss.android.ugc.aweme.ecommerce.base.common.model.Video> list5 = productPackStruct.creatorVideos;
            if (list5 != null) {
                video = (com.ss.android.ugc.aweme.ecommerce.base.common.model.Video) ORZ.LJLLLL(list5);
            } else {
                video = null;
            }
        }
        ProductBase productBase2 = productPackStruct.baseInfo;
        if (productBase2 != null && (list3 = productBase2.images) != null) {
            arrayList2.addAll(list3);
        }
        List<SaleProp> list6 = productPackStruct.saleProps;
        if (list6 != null) {
            Iterator<SaleProp> it = list6.iterator();
            i2 = 0;
            while (it.hasNext()) {
                List<SalePropValue> list7 = it.next().salePropValueList;
                if (list7 != null) {
                    Iterator<SalePropValue> it2 = list7.iterator();
                    while (it2.hasNext()) {
                        Image image = it2.next().image;
                        if (image != null) {
                            arrayList2.add(image);
                            i2++;
                        }
                    }
                }
            }
        } else {
            i2 = 0;
        }
        if (productPackStruct.LIZLLL()) {
            if (list4 == null) {
                list4 = C61878OQg.INSTANCE;
            }
            Iterator it3 = new ArrayList(list4).iterator();
            while (true) {
                if (!it3.hasNext()) {
                    break;
                }
                Object next = it3.next();
                SkcInfo skcInfo = productPackStruct.skcInfo;
                if (skcInfo != null && (list2 = skcInfo.skcList) != null) {
                    Iterator<com.ss.android.ugc.aweme.ecommerce.base.sku.model.dto.Skc> it4 = list2.iterator();
                    while (true) {
                        if (it4.hasNext()) {
                            skc = it4.next();
                            if (o.LJ(skc.skcId, next)) {
                                break;
                            }
                        } else {
                            skc = null;
                            break;
                        }
                    }
                    com.ss.android.ugc.aweme.ecommerce.base.sku.model.dto.Skc skc2 = skc;
                    if (skc2 != null) {
                        List<Image> list8 = skc2.skcImages;
                        arrayList2 = list8 != null ? ORZ.LLJILJILJ(list8) : new ArrayList();
                    }
                }
            }
        }
        for (Image image2 : arrayList2) {
            List<String> urls = image2.getUrls();
            if (urls != null) {
                arrayList = new ArrayList();
                Iterator<String> it5 = urls.iterator();
                while (it5.hasNext()) {
                    String LIZ = C70660RoG.LIZ(productPackStruct.bizType, it5.next());
                    if (LIZ != null) {
                        arrayList.add(LIZ);
                    }
                }
            } else {
                arrayList = null;
            }
            image2.setUrls(arrayList);
        }
        int i3 = 0;
        for (Object obj : arrayList2) {
            int i4 = i3 + 1;
            if (i3 >= 0) {
                Image image3 = (Image) obj;
                if (i3 == 0 && video != null && C44385HbR.LIZ && !C44385HbR.LIZJ) {
                    List<String> list9 = image3.toImageUrlModel().LIZ;
                    if (list9 == null || (str = (String) ORZ.LJLLLLLL(0, list9)) == null) {
                        str = "";
                    }
                    mediaItem = new MediaItem(com.ss.android.ugc.aweme.ecommerce.base.common.model.Video.LIZ(video, str));
                } else {
                    mediaItem = new MediaItem(image3);
                }
                arrayList3.add(mediaItem);
                i3 = i4;
            } else {
                C47261Igj.LJJJJJ();
                throw null;
            }
        }
        if (video != null && C44385HbR.LIZJ) {
            arrayList3.add(new MediaItem(video));
        }
        if (productPackStruct.LIZLLL()) {
            i2 = 0;
        }
        boolean LIZLLL = productPackStruct.LIZLLL();
        List list10 = productPackStruct.productBannerLabel;
        if (list10 == null) {
            list10 = C61878OQg.INSTANCE;
        }
        ProductBase productBase3 = productPackStruct.baseInfo;
        if (productBase3 != null) {
            dynamicSellingPointsBase = productBase3.dynamicSellingPointsBase;
        }
        return new C69696RWy(arrayList2, i2, LIZLLL, list10, bool, i, dynamicSellingPointsBase, arrayList3);
    }

    @Override // X.C4CJ
    public YAT LIZIZ(float f, float f2, float f3, float f4, int i) {
        return new YAT(f2, f3, f4, i, f, f, f, f);
    }
}
